

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "AW_ProductionDAL\App.config"
//     Connection String Name: "AW2016_ProdDb"
//     Connection String:      "Data Source=DESKTOP-PDAFJ6Q;Initial Catalog=AdventureWorks2016;Integrated Security=True"
// ------------------------------------------------------------------------------------------------
// Database Edition        : Developer Edition (64-bit)
// Database Engine Edition : Enterprise
// Database Version        : 13.0.5026.0

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace AW_ProductionDAL
{
    using System.Linq;

    #region Unit of work

    public interface IProdDbContext : System.IDisposable
    {
        System.Data.Entity.DbSet<Production_BillOfMaterialEntity> Production_BillOfMaterials { get; set; } // BillOfMaterials
        System.Data.Entity.DbSet<Production_CultureEntity> Production_Cultures { get; set; } // Culture
        System.Data.Entity.DbSet<Production_DocumentEntity> Production_Documents { get; set; } // Document
        System.Data.Entity.DbSet<Production_IllustrationEntity> Production_Illustrations { get; set; } // Illustration
        System.Data.Entity.DbSet<Production_LocationEntity> Production_Locations { get; set; } // Location
        System.Data.Entity.DbSet<Production_ProductEntity> Production_Products { get; set; } // Product
        System.Data.Entity.DbSet<Production_ProductCategoryEntity> Production_ProductCategories { get; set; } // ProductCategory
        System.Data.Entity.DbSet<Production_ProductCostHistoryEntity> Production_ProductCostHistories { get; set; } // ProductCostHistory
        System.Data.Entity.DbSet<Production_ProductDescriptionEntity> Production_ProductDescriptions { get; set; } // ProductDescription
        System.Data.Entity.DbSet<Production_ProductDocumentEntity> Production_ProductDocuments { get; set; } // ProductDocument
        System.Data.Entity.DbSet<Production_ProductInventoryEntity> Production_ProductInventories { get; set; } // ProductInventory
        System.Data.Entity.DbSet<Production_ProductListPriceHistoryEntity> Production_ProductListPriceHistories { get; set; } // ProductListPriceHistory
        System.Data.Entity.DbSet<Production_ProductModelEntity> Production_ProductModels { get; set; } // ProductModel
        System.Data.Entity.DbSet<Production_ProductModelIllustrationEntity> Production_ProductModelIllustrations { get; set; } // ProductModelIllustration
        System.Data.Entity.DbSet<Production_ProductModelProductDescriptionCultureEntity> Production_ProductModelProductDescriptionCultures { get; set; } // ProductModelProductDescriptionCulture
        System.Data.Entity.DbSet<Production_ProductPhotoEntity> Production_ProductPhotoes { get; set; } // ProductPhoto
        System.Data.Entity.DbSet<Production_ProductProductPhotoEntity> Production_ProductProductPhotoes { get; set; } // ProductProductPhoto
        System.Data.Entity.DbSet<Production_ProductReviewEntity> Production_ProductReviews { get; set; } // ProductReview
        System.Data.Entity.DbSet<Production_ProductSubcategoryEntity> Production_ProductSubcategories { get; set; } // ProductSubcategory
        System.Data.Entity.DbSet<Production_ScrapReasonEntity> Production_ScrapReasons { get; set; } // ScrapReason
        System.Data.Entity.DbSet<Production_TransactionHistoryEntity> Production_TransactionHistories { get; set; } // TransactionHistory
        System.Data.Entity.DbSet<Production_TransactionHistoryArchiveEntity> Production_TransactionHistoryArchives { get; set; } // TransactionHistoryArchive
        System.Data.Entity.DbSet<Production_UnitMeasureEntity> Production_UnitMeasures { get; set; } // UnitMeasure
        System.Data.Entity.DbSet<Production_VProductAndDescriptionEntity> Production_VProductAndDescriptions { get; set; } // vProductAndDescription
        System.Data.Entity.DbSet<Production_VProductModelCatalogDescriptionEntity> Production_VProductModelCatalogDescriptions { get; set; } // vProductModelCatalogDescription
        System.Data.Entity.DbSet<Production_VProductModelInstructionEntity> Production_VProductModelInstructions { get; set; } // vProductModelInstructions
        System.Data.Entity.DbSet<Production_WorkOrderEntity> Production_WorkOrders { get; set; } // WorkOrder
        System.Data.Entity.DbSet<Production_WorkOrderRoutingEntity> Production_WorkOrderRoutings { get; set; } // WorkOrderRouting

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class ProdDbContext : System.Data.Entity.DbContext, IProdDbContext
    {
        public System.Data.Entity.DbSet<Production_BillOfMaterialEntity> Production_BillOfMaterials { get; set; } // BillOfMaterials
        public System.Data.Entity.DbSet<Production_CultureEntity> Production_Cultures { get; set; } // Culture
        public System.Data.Entity.DbSet<Production_DocumentEntity> Production_Documents { get; set; } // Document
        public System.Data.Entity.DbSet<Production_IllustrationEntity> Production_Illustrations { get; set; } // Illustration
        public System.Data.Entity.DbSet<Production_LocationEntity> Production_Locations { get; set; } // Location
        public System.Data.Entity.DbSet<Production_ProductEntity> Production_Products { get; set; } // Product
        public System.Data.Entity.DbSet<Production_ProductCategoryEntity> Production_ProductCategories { get; set; } // ProductCategory
        public System.Data.Entity.DbSet<Production_ProductCostHistoryEntity> Production_ProductCostHistories { get; set; } // ProductCostHistory
        public System.Data.Entity.DbSet<Production_ProductDescriptionEntity> Production_ProductDescriptions { get; set; } // ProductDescription
        public System.Data.Entity.DbSet<Production_ProductDocumentEntity> Production_ProductDocuments { get; set; } // ProductDocument
        public System.Data.Entity.DbSet<Production_ProductInventoryEntity> Production_ProductInventories { get; set; } // ProductInventory
        public System.Data.Entity.DbSet<Production_ProductListPriceHistoryEntity> Production_ProductListPriceHistories { get; set; } // ProductListPriceHistory
        public System.Data.Entity.DbSet<Production_ProductModelEntity> Production_ProductModels { get; set; } // ProductModel
        public System.Data.Entity.DbSet<Production_ProductModelIllustrationEntity> Production_ProductModelIllustrations { get; set; } // ProductModelIllustration
        public System.Data.Entity.DbSet<Production_ProductModelProductDescriptionCultureEntity> Production_ProductModelProductDescriptionCultures { get; set; } // ProductModelProductDescriptionCulture
        public System.Data.Entity.DbSet<Production_ProductPhotoEntity> Production_ProductPhotoes { get; set; } // ProductPhoto
        public System.Data.Entity.DbSet<Production_ProductProductPhotoEntity> Production_ProductProductPhotoes { get; set; } // ProductProductPhoto
        public System.Data.Entity.DbSet<Production_ProductReviewEntity> Production_ProductReviews { get; set; } // ProductReview
        public System.Data.Entity.DbSet<Production_ProductSubcategoryEntity> Production_ProductSubcategories { get; set; } // ProductSubcategory
        public System.Data.Entity.DbSet<Production_ScrapReasonEntity> Production_ScrapReasons { get; set; } // ScrapReason
        public System.Data.Entity.DbSet<Production_TransactionHistoryEntity> Production_TransactionHistories { get; set; } // TransactionHistory
        public System.Data.Entity.DbSet<Production_TransactionHistoryArchiveEntity> Production_TransactionHistoryArchives { get; set; } // TransactionHistoryArchive
        public System.Data.Entity.DbSet<Production_UnitMeasureEntity> Production_UnitMeasures { get; set; } // UnitMeasure
        public System.Data.Entity.DbSet<Production_VProductAndDescriptionEntity> Production_VProductAndDescriptions { get; set; } // vProductAndDescription
        public System.Data.Entity.DbSet<Production_VProductModelCatalogDescriptionEntity> Production_VProductModelCatalogDescriptions { get; set; } // vProductModelCatalogDescription
        public System.Data.Entity.DbSet<Production_VProductModelInstructionEntity> Production_VProductModelInstructions { get; set; } // vProductModelInstructions
        public System.Data.Entity.DbSet<Production_WorkOrderEntity> Production_WorkOrders { get; set; } // WorkOrder
        public System.Data.Entity.DbSet<Production_WorkOrderRoutingEntity> Production_WorkOrderRoutings { get; set; } // WorkOrderRouting

        static ProdDbContext()
        {
            System.Data.Entity.Database.SetInitializer<ProdDbContext>(null);
        }

        public ProdDbContext()
            : base("Name=AW2016_ProdDb")
        {
        }

        public ProdDbContext(string connectionString)
            : base(connectionString)
        {
        }

        public ProdDbContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public ProdDbContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public ProdDbContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new Production_BillOfMaterialEntityMapping());
            modelBuilder.Configurations.Add(new Production_CultureEntityMapping());
            modelBuilder.Configurations.Add(new Production_DocumentEntityMapping());
            modelBuilder.Configurations.Add(new Production_IllustrationEntityMapping());
            modelBuilder.Configurations.Add(new Production_LocationEntityMapping());
            modelBuilder.Configurations.Add(new Production_ProductEntityMapping());
            modelBuilder.Configurations.Add(new Production_ProductCategoryEntityMapping());
            modelBuilder.Configurations.Add(new Production_ProductCostHistoryEntityMapping());
            modelBuilder.Configurations.Add(new Production_ProductDescriptionEntityMapping());
            modelBuilder.Configurations.Add(new Production_ProductDocumentEntityMapping());
            modelBuilder.Configurations.Add(new Production_ProductInventoryEntityMapping());
            modelBuilder.Configurations.Add(new Production_ProductListPriceHistoryEntityMapping());
            modelBuilder.Configurations.Add(new Production_ProductModelEntityMapping());
            modelBuilder.Configurations.Add(new Production_ProductModelIllustrationEntityMapping());
            modelBuilder.Configurations.Add(new Production_ProductModelProductDescriptionCultureEntityMapping());
            modelBuilder.Configurations.Add(new Production_ProductPhotoEntityMapping());
            modelBuilder.Configurations.Add(new Production_ProductProductPhotoEntityMapping());
            modelBuilder.Configurations.Add(new Production_ProductReviewEntityMapping());
            modelBuilder.Configurations.Add(new Production_ProductSubcategoryEntityMapping());
            modelBuilder.Configurations.Add(new Production_ScrapReasonEntityMapping());
            modelBuilder.Configurations.Add(new Production_TransactionHistoryEntityMapping());
            modelBuilder.Configurations.Add(new Production_TransactionHistoryArchiveEntityMapping());
            modelBuilder.Configurations.Add(new Production_UnitMeasureEntityMapping());
            modelBuilder.Configurations.Add(new Production_VProductAndDescriptionEntityMapping());
            modelBuilder.Configurations.Add(new Production_VProductModelCatalogDescriptionEntityMapping());
            modelBuilder.Configurations.Add(new Production_VProductModelInstructionEntityMapping());
            modelBuilder.Configurations.Add(new Production_WorkOrderEntityMapping());
            modelBuilder.Configurations.Add(new Production_WorkOrderRoutingEntityMapping());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new Production_BillOfMaterialEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_CultureEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_DocumentEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_IllustrationEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_LocationEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_ProductEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_ProductCategoryEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_ProductCostHistoryEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_ProductDescriptionEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_ProductDocumentEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_ProductInventoryEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_ProductListPriceHistoryEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_ProductModelEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_ProductModelIllustrationEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_ProductModelProductDescriptionCultureEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_ProductPhotoEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_ProductProductPhotoEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_ProductReviewEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_ProductSubcategoryEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_ScrapReasonEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_TransactionHistoryEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_TransactionHistoryArchiveEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_UnitMeasureEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_VProductAndDescriptionEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_VProductModelCatalogDescriptionEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_VProductModelInstructionEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_WorkOrderEntityMapping(schema));
            modelBuilder.Configurations.Add(new Production_WorkOrderRoutingEntityMapping(schema));
            return modelBuilder;
        }
    }
    #endregion

    #region Database context factory

    public class ProdDbContextFactory : System.Data.Entity.Infrastructure.IDbContextFactory<ProdDbContext>
    {
        public ProdDbContext Create()
        {
            return new ProdDbContext();
        }
    }

    #endregion

    #region Fake Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class FakeProdDbContext : IProdDbContext
    {
        public System.Data.Entity.DbSet<Production_BillOfMaterialEntity> Production_BillOfMaterials { get; set; }
        public System.Data.Entity.DbSet<Production_CultureEntity> Production_Cultures { get; set; }
        public System.Data.Entity.DbSet<Production_DocumentEntity> Production_Documents { get; set; }
        public System.Data.Entity.DbSet<Production_IllustrationEntity> Production_Illustrations { get; set; }
        public System.Data.Entity.DbSet<Production_LocationEntity> Production_Locations { get; set; }
        public System.Data.Entity.DbSet<Production_ProductEntity> Production_Products { get; set; }
        public System.Data.Entity.DbSet<Production_ProductCategoryEntity> Production_ProductCategories { get; set; }
        public System.Data.Entity.DbSet<Production_ProductCostHistoryEntity> Production_ProductCostHistories { get; set; }
        public System.Data.Entity.DbSet<Production_ProductDescriptionEntity> Production_ProductDescriptions { get; set; }
        public System.Data.Entity.DbSet<Production_ProductDocumentEntity> Production_ProductDocuments { get; set; }
        public System.Data.Entity.DbSet<Production_ProductInventoryEntity> Production_ProductInventories { get; set; }
        public System.Data.Entity.DbSet<Production_ProductListPriceHistoryEntity> Production_ProductListPriceHistories { get; set; }
        public System.Data.Entity.DbSet<Production_ProductModelEntity> Production_ProductModels { get; set; }
        public System.Data.Entity.DbSet<Production_ProductModelIllustrationEntity> Production_ProductModelIllustrations { get; set; }
        public System.Data.Entity.DbSet<Production_ProductModelProductDescriptionCultureEntity> Production_ProductModelProductDescriptionCultures { get; set; }
        public System.Data.Entity.DbSet<Production_ProductPhotoEntity> Production_ProductPhotoes { get; set; }
        public System.Data.Entity.DbSet<Production_ProductProductPhotoEntity> Production_ProductProductPhotoes { get; set; }
        public System.Data.Entity.DbSet<Production_ProductReviewEntity> Production_ProductReviews { get; set; }
        public System.Data.Entity.DbSet<Production_ProductSubcategoryEntity> Production_ProductSubcategories { get; set; }
        public System.Data.Entity.DbSet<Production_ScrapReasonEntity> Production_ScrapReasons { get; set; }
        public System.Data.Entity.DbSet<Production_TransactionHistoryEntity> Production_TransactionHistories { get; set; }
        public System.Data.Entity.DbSet<Production_TransactionHistoryArchiveEntity> Production_TransactionHistoryArchives { get; set; }
        public System.Data.Entity.DbSet<Production_UnitMeasureEntity> Production_UnitMeasures { get; set; }
        public System.Data.Entity.DbSet<Production_VProductAndDescriptionEntity> Production_VProductAndDescriptions { get; set; }
        public System.Data.Entity.DbSet<Production_VProductModelCatalogDescriptionEntity> Production_VProductModelCatalogDescriptions { get; set; }
        public System.Data.Entity.DbSet<Production_VProductModelInstructionEntity> Production_VProductModelInstructions { get; set; }
        public System.Data.Entity.DbSet<Production_WorkOrderEntity> Production_WorkOrders { get; set; }
        public System.Data.Entity.DbSet<Production_WorkOrderRoutingEntity> Production_WorkOrderRoutings { get; set; }

        public FakeProdDbContext()
        {
            _changeTracker = null;
            _configuration = null;
            _database = null;

            Production_BillOfMaterials = new FakeDbSet<Production_BillOfMaterialEntity>("BillOfMaterialsId");
            Production_Cultures = new FakeDbSet<Production_CultureEntity>("CultureId");
            Production_Documents = new FakeDbSet<Production_DocumentEntity>("DocumentNode");
            Production_Illustrations = new FakeDbSet<Production_IllustrationEntity>("IllustrationId");
            Production_Locations = new FakeDbSet<Production_LocationEntity>("LocationId");
            Production_Products = new FakeDbSet<Production_ProductEntity>("ProductId");
            Production_ProductCategories = new FakeDbSet<Production_ProductCategoryEntity>("ProductCategoryId");
            Production_ProductCostHistories = new FakeDbSet<Production_ProductCostHistoryEntity>("ProductId", "StartDate");
            Production_ProductDescriptions = new FakeDbSet<Production_ProductDescriptionEntity>("ProductDescriptionId");
            Production_ProductDocuments = new FakeDbSet<Production_ProductDocumentEntity>("ProductId", "DocumentNode");
            Production_ProductInventories = new FakeDbSet<Production_ProductInventoryEntity>("ProductId", "LocationId");
            Production_ProductListPriceHistories = new FakeDbSet<Production_ProductListPriceHistoryEntity>("ProductId", "StartDate");
            Production_ProductModels = new FakeDbSet<Production_ProductModelEntity>("ProductModelId");
            Production_ProductModelIllustrations = new FakeDbSet<Production_ProductModelIllustrationEntity>("ProductModelId", "IllustrationId");
            Production_ProductModelProductDescriptionCultures = new FakeDbSet<Production_ProductModelProductDescriptionCultureEntity>("ProductModelId", "ProductDescriptionId", "CultureId");
            Production_ProductPhotoes = new FakeDbSet<Production_ProductPhotoEntity>("ProductPhotoId");
            Production_ProductProductPhotoes = new FakeDbSet<Production_ProductProductPhotoEntity>("ProductId", "ProductPhotoId");
            Production_ProductReviews = new FakeDbSet<Production_ProductReviewEntity>("ProductReviewId");
            Production_ProductSubcategories = new FakeDbSet<Production_ProductSubcategoryEntity>("ProductSubcategoryId");
            Production_ScrapReasons = new FakeDbSet<Production_ScrapReasonEntity>("ScrapReasonId");
            Production_TransactionHistories = new FakeDbSet<Production_TransactionHistoryEntity>("TransactionId");
            Production_TransactionHistoryArchives = new FakeDbSet<Production_TransactionHistoryArchiveEntity>("TransactionId");
            Production_UnitMeasures = new FakeDbSet<Production_UnitMeasureEntity>("UnitMeasureCode");
            Production_VProductAndDescriptions = new FakeDbSet<Production_VProductAndDescriptionEntity>("ProductId", "Name", "ProductModel", "CultureId", "Description");
            Production_VProductModelCatalogDescriptions = new FakeDbSet<Production_VProductModelCatalogDescriptionEntity>("ProductModelId", "Name", "Rowguid", "ModifiedDate");
            Production_VProductModelInstructions = new FakeDbSet<Production_VProductModelInstructionEntity>("ProductModelId", "Name", "Rowguid", "ModifiedDate");
            Production_WorkOrders = new FakeDbSet<Production_WorkOrderEntity>("WorkOrderId");
            Production_WorkOrderRoutings = new FakeDbSet<Production_WorkOrderRoutingEntity>("WorkOrderId", "ProductId", "OperationSequence");
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }

        private System.Data.Entity.Infrastructure.DbChangeTracker _changeTracker;
        public System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get { return _changeTracker; } }
        private System.Data.Entity.Infrastructure.DbContextConfiguration _configuration;
        public System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get { return _configuration; } }
        private System.Data.Entity.Database _database;
        public System.Data.Entity.Database Database { get { return _database; } }
        public System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity)
        {
            throw new System.NotImplementedException();
        }
        public System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors()
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet Set(System.Type entityType)
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public override string ToString()
        {
            throw new System.NotImplementedException();
        }

    }

    // ************************************************************************
    // Fake DbSet
    // Implementing Find:
    //      The Find method is difficult to implement in a generic fashion. If
    //      you need to test code that makes use of the Find method it is
    //      easiest to create a test DbSet for each of the entity types that
    //      need to support find. You can then write logic to find that
    //      particular type of entity, as shown below:
    //      public class FakeBlogDbSet : FakeDbSet<Blog>
    //      {
    //          public override Blog Find(params object[] keyValues)
    //          {
    //              var id = (int) keyValues.Single();
    //              return this.SingleOrDefault(b => b.BlogId == id);
    //          }
    //      }
    //      Read more about it here: https://msdn.microsoft.com/en-us/data/dn314431.aspx
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class FakeDbSet<TEntity> : System.Data.Entity.DbSet<TEntity>, IQueryable, System.Collections.Generic.IEnumerable<TEntity>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity> where TEntity : class
    {
        private readonly System.Reflection.PropertyInfo[] _primaryKeys;
        private readonly System.Collections.ObjectModel.ObservableCollection<TEntity> _data;
        private readonly IQueryable _query;

        public FakeDbSet()
        {
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public FakeDbSet(params string[] primaryKeys)
        {
            _primaryKeys = typeof(TEntity).GetProperties().Where(x => primaryKeys.Contains(x.Name)).ToArray();
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public override TEntity Find(params object[] keyValues)
        {
            if (_primaryKeys == null)
                throw new System.ArgumentException("No primary keys defined");
            if (keyValues.Length != _primaryKeys.Length)
                throw new System.ArgumentException("Incorrect number of keys passed to Find method");

            var keyQuery = this.AsQueryable();
            keyQuery = keyValues
                .Select((t, i) => i)
                .Aggregate(keyQuery,
                    (current, x) =>
                        current.Where(entity => _primaryKeys[x].GetValue(entity, null).Equals(keyValues[x])));

            return keyQuery.SingleOrDefault();
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(System.Threading.CancellationToken cancellationToken, params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues), cancellationToken);
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues));
        }

        public override System.Collections.Generic.IEnumerable<TEntity> AddRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Add(entity);
            }
            return items;
        }

        public override TEntity Add(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override System.Collections.Generic.IEnumerable<TEntity> RemoveRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Remove(entity);
            }
            return items;
        }

        public override TEntity Remove(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Remove(item);
            return item;
        }

        public override TEntity Attach(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override TEntity Create()
        {
            return System.Activator.CreateInstance<TEntity>();
        }

        public override TDerivedEntity Create<TDerivedEntity>()
        {
            return System.Activator.CreateInstance<TDerivedEntity>();
        }

        public override System.Collections.ObjectModel.ObservableCollection<TEntity> Local
        {
            get { return _data; }
        }

        System.Type IQueryable.ElementType
        {
            get { return _query.ElementType; }
        }

        System.Linq.Expressions.Expression IQueryable.Expression
        {
            get { return _query.Expression; }
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<TEntity>(_query.Provider); }
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Collections.Generic.IEnumerator<TEntity> System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator<TEntity> System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity>.GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<TEntity>(_data.GetEnumerator());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class FakeDbAsyncQueryProvider<TEntity> : System.Data.Entity.Infrastructure.IDbAsyncQueryProvider
    {
        private readonly IQueryProvider _inner;

        public FakeDbAsyncQueryProvider(IQueryProvider inner)
        {
            _inner = inner;
        }

        public IQueryable CreateQuery(System.Linq.Expressions.Expression expression)
        {
            var m = expression as System.Linq.Expressions.MethodCallExpression;
            if (m != null)
            {
                var resultType = m.Method.ReturnType; // it shoud be IQueryable<T>
                var tElement = resultType.GetGenericArguments()[0];
                var queryType = typeof(FakeDbAsyncEnumerable<>).MakeGenericType(tElement);
                return (IQueryable) System.Activator.CreateInstance(queryType, expression);
            }
            return new FakeDbAsyncEnumerable<TEntity>(expression);
        }

        public IQueryable<TElement> CreateQuery<TElement>(System.Linq.Expressions.Expression expression)
        {
            var queryType = typeof(FakeDbAsyncEnumerable<>).MakeGenericType(typeof(TElement));
            return (IQueryable<TElement>)System.Activator.CreateInstance(queryType, expression);
        }

        public object Execute(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute(expression);
        }

        public TResult Execute<TResult>(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute<TResult>(expression);
        }

        public System.Threading.Tasks.Task<object> ExecuteAsync(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute(expression));
        }

        public System.Threading.Tasks.Task<TResult> ExecuteAsync<TResult>(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute<TResult>(expression));
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class FakeDbAsyncEnumerable<T> : EnumerableQuery<T>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<T>, IQueryable<T>
    {
        public FakeDbAsyncEnumerable(System.Collections.Generic.IEnumerable<T> enumerable)
            : base(enumerable)
        { }

        public FakeDbAsyncEnumerable(System.Linq.Expressions.Expression expression)
            : base(expression)
        { }

        public System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T> GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<T>(this.AsEnumerable().GetEnumerator());
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator System.Data.Entity.Infrastructure.IDbAsyncEnumerable.GetAsyncEnumerator()
        {
            return GetAsyncEnumerator();
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<T>(this); }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class FakeDbAsyncEnumerator<T> : System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T>
    {
        private readonly System.Collections.Generic.IEnumerator<T> _inner;

        public FakeDbAsyncEnumerator(System.Collections.Generic.IEnumerator<T> inner)
        {
            _inner = inner;
        }

        public void Dispose()
        {
            _inner.Dispose();
        }

        public System.Threading.Tasks.Task<bool> MoveNextAsync(System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(_inner.MoveNext());
        }

        public T Current
        {
            get { return _inner.Current; }
        }

        object System.Data.Entity.Infrastructure.IDbAsyncEnumerator.Current
        {
            get { return Current; }
        }
    }

    #endregion

    #region POCO classes

    // BillOfMaterials
    ///<summary>
    /// Items required to make bicycles and bicycle subassemblies. It identifies the heirarchical relationship between a parent product and its components.
    ///</summary>
    [Table("BillOfMaterials", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_BillOfMaterialEntity
    {

        ///<summary>
        /// Primary key for BillOfMaterials records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"BillOfMaterialsID", Order = 1, TypeName = "int")]
        [Index(@"PK_BillOfMaterials_BillOfMaterialsID", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Bill of materials ID")]
        public int BillOfMaterialsId { get; set; } // BillOfMaterialsID (Primary key)

        ///<summary>
        /// Parent product identification number. Foreign key to Product.ProductID.
        ///</summary>
        [Column(@"ProductAssemblyID", Order = 2, TypeName = "int")]
        [Index(@"AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate", 1, IsUnique = true, IsClustered = false)]
        [Display(Name = "Product assembly ID")]
        public int? ProductAssemblyId { get; set; } // ProductAssemblyID

        ///<summary>
        /// Component identification number. Foreign key to Product.ProductID.
        ///</summary>
        [Column(@"ComponentID", Order = 3, TypeName = "int")]
        [Index(@"AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate", 2, IsUnique = true, IsClustered = false)]
        [Required]
        [Display(Name = "Component ID")]
        public int ComponentId { get; set; } // ComponentID

        ///<summary>
        /// Date the component started being used in the assembly item.
        ///</summary>
        [Column(@"StartDate", Order = 4, TypeName = "datetime")]
        [Index(@"AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate", 3, IsUnique = true, IsClustered = false)]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Start date")]
        public System.DateTime StartDate { get; set; } // StartDate

        ///<summary>
        /// Date the component stopped being used in the assembly item.
        ///</summary>
        [Column(@"EndDate", Order = 5, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "End date")]
        public System.DateTime? EndDate { get; set; } // EndDate

        ///<summary>
        /// Standard code identifying the unit of measure for the quantity.
        ///</summary>
        [Column(@"UnitMeasureCode", Order = 6, TypeName = "nchar")]
        [Index(@"IX_BillOfMaterials_UnitMeasureCode", 1, IsUnique = false, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Unit measure code")]
        public string UnitMeasureCode { get; set; } // UnitMeasureCode (length: 3)

        ///<summary>
        /// Indicates the depth the component is from its parent (AssemblyID).
        ///</summary>
        [Column(@"BOMLevel", Order = 7, TypeName = "smallint")]
        [Required]
        [Display(Name = "Boml evel")]
        public short BomLevel { get; set; } // BOMLevel

        ///<summary>
        /// Quantity of the component needed to create the assembly.
        ///</summary>
        [Column(@"PerAssemblyQty", Order = 8, TypeName = "decimal")]
        [Required]
        [Display(Name = "Per assembly qty")]
        public decimal PerAssemblyQty { get; set; } // PerAssemblyQty

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 9, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent Production_Product pointed by [BillOfMaterials].([ComponentId]) (FK_BillOfMaterials_Product_ComponentID)
        /// </summary>
        [ForeignKey("ComponentId"), Required] public virtual Production_ProductEntity Component { get; set; } // FK_BillOfMaterials_Product_ComponentID

        /// <summary>
        /// Parent Production_Product pointed by [BillOfMaterials].([ProductAssemblyId]) (FK_BillOfMaterials_Product_ProductAssemblyID)
        /// </summary>
        [ForeignKey("ProductAssemblyId")] public virtual Production_ProductEntity ProductAssembly { get; set; } // FK_BillOfMaterials_Product_ProductAssemblyID

        /// <summary>
        /// Parent Production_UnitMeasure pointed by [BillOfMaterials].([UnitMeasureCode]) (FK_BillOfMaterials_UnitMeasure_UnitMeasureCode)
        /// </summary>
        [ForeignKey("UnitMeasureCode"), Required] public virtual Production_UnitMeasureEntity Production_UnitMeasure { get; set; } // FK_BillOfMaterials_UnitMeasure_UnitMeasureCode

        public Production_BillOfMaterialEntity()
        {
            StartDate = System.DateTime.Now;
            PerAssemblyQty = 1.00m;
            ModifiedDate = System.DateTime.Now;
        }
    }

    // Culture
    ///<summary>
    /// Lookup table containing the languages in which some AdventureWorks data is stored.
    ///</summary>
    [Table("Culture", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_CultureEntity
    {

        ///<summary>
        /// Primary key for Culture records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"CultureID", Order = 1, TypeName = "nchar")]
        [Index(@"PK_Culture_CultureID", 1, IsUnique = true, IsClustered = true)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(6)]
        [StringLength(6)]
        [Key]
        [Display(Name = "Culture ID")]
        public string CultureId { get; set; } // CultureID (Primary key) (length: 6)

        ///<summary>
        /// Culture description.
        ///</summary>
        [Column(@"Name", Order = 2, TypeName = "nvarchar")]
        [Index(@"AK_Culture_Name", 1, IsUnique = true, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 50)

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 3, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Production_ProductModelProductDescriptionCultures where [ProductModelProductDescriptionCulture].[CultureID] point to this entity (FK_ProductModelProductDescriptionCulture_Culture_CultureID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductModelProductDescriptionCultureEntity> Production_ProductModelProductDescriptionCultures { get; set; } // ProductModelProductDescriptionCulture.FK_ProductModelProductDescriptionCulture_Culture_CultureID

        public Production_CultureEntity()
        {
            ModifiedDate = System.DateTime.Now;
            Production_ProductModelProductDescriptionCultures = new System.Collections.Generic.List<Production_ProductModelProductDescriptionCultureEntity>();
        }
    }

    // Document
    ///<summary>
    /// Product maintenance documents.
    ///</summary>
    [Table("Document", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_DocumentEntity
    {

        ///<summary>
        /// Primary key for Document records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"DocumentNode", Order = 1, TypeName = "hierarchyid")]
        [Index(@"PK_Document_DocumentNode", 1, IsUnique = true, IsClustered = true)]
        [Index(@"AK_Document_DocumentLevel_DocumentNode", 2, IsUnique = true, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Document node")]
        public System.Data.Entity.Hierarchy.HierarchyId DocumentNode { get; set; } // DocumentNode (Primary key)

        ///<summary>
        /// Depth in the document hierarchy.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
        [Column(@"DocumentLevel", Order = 2, TypeName = "smallint")]
        [Index(@"AK_Document_DocumentLevel_DocumentNode", 1, IsUnique = true, IsClustered = false)]
        [Display(Name = "Document level")]
        public short? DocumentLevel { get; private set; } // DocumentLevel

        ///<summary>
        /// Title of the document.
        ///</summary>
        [Column(@"Title", Order = 3, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Title")]
        public string Title { get; set; } // Title (length: 50)

        ///<summary>
        /// Employee who controls the document.  Foreign key to Employee.BusinessEntityID
        ///</summary>
        [Column(@"Owner", Order = 4, TypeName = "int")]
        [Required]
        [Display(Name = "Owner")]
        public int Owner { get; set; } // Owner

        ///<summary>
        /// 0 = This is a folder, 1 = This is a document.
        ///</summary>
        [Column(@"FolderFlag", Order = 5, TypeName = "bit")]
        [Required]
        [Display(Name = "Folder flag")]
        public bool FolderFlag { get; set; } // FolderFlag

        ///<summary>
        /// File name of the document
        ///</summary>
        [Column(@"FileName", Order = 6, TypeName = "nvarchar")]
        [Index(@"IX_Document_FileName_Revision", 1, IsUnique = false, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(400)]
        [StringLength(400)]
        [Display(Name = "File name")]
        public string FileName { get; set; } // FileName (length: 400)

        ///<summary>
        /// File extension indicating the document type. For example, .doc or .txt.
        ///</summary>
        [Column(@"FileExtension", Order = 7, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(8)]
        [StringLength(8)]
        [Display(Name = "File extension")]
        public string FileExtension { get; set; } // FileExtension (length: 8)

        ///<summary>
        /// Revision number of the document.
        ///</summary>
        [Column(@"Revision", Order = 8, TypeName = "nchar")]
        [Index(@"IX_Document_FileName_Revision", 2, IsUnique = false, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Revision")]
        public string Revision { get; set; } // Revision (length: 5)

        ///<summary>
        /// Engineering change approval number.
        ///</summary>
        [Column(@"ChangeNumber", Order = 9, TypeName = "int")]
        [Required]
        [Display(Name = "Change number")]
        public int ChangeNumber { get; set; } // ChangeNumber

        ///<summary>
        /// 1 = Pending approval, 2 = Approved, 3 = Obsolete
        ///</summary>
        [Column(@"Status", Order = 10, TypeName = "tinyint")]
        [Required]
        [Display(Name = "Status")]
        public byte Status { get; set; } // Status

        ///<summary>
        /// Document abstract.
        ///</summary>
        [Column(@"DocumentSummary", Order = 11, TypeName = "nvarchar(max)")]
        [Display(Name = "Document summary")]
        public string DocumentSummary { get; set; } // DocumentSummary

        ///<summary>
        /// Complete document.
        ///</summary>
        [Column(@"Document", Order = 12, TypeName = "varbinary(max)")]
        [Display(Name = "Document")]
        public byte[] Document { get; set; } // Document

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Required for FileStream.
        ///</summary>
        [Column(@"rowguid", Order = 13, TypeName = "uniqueidentifier")]
        [Index(@"UQ__Document__F73921F744672977", 1, IsUnique = true, IsClustered = false)]
        [Index(@"AK_Document_rowguid", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid { get; set; } // rowguid

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 14, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Production_ProductDocuments where [ProductDocument].[DocumentNode] point to this entity (FK_ProductDocument_Document_DocumentNode)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductDocumentEntity> Production_ProductDocuments { get; set; } // ProductDocument.FK_ProductDocument_Document_DocumentNode

        public Production_DocumentEntity()
        {
            FolderFlag = false;
            ChangeNumber = 0;
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
            Production_ProductDocuments = new System.Collections.Generic.List<Production_ProductDocumentEntity>();
        }
    }

    // Illustration
    ///<summary>
    /// Bicycle assembly diagrams.
    ///</summary>
    [Table("Illustration", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_IllustrationEntity
    {

        ///<summary>
        /// Primary key for Illustration records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"IllustrationID", Order = 1, TypeName = "int")]
        [Index(@"PK_Illustration_IllustrationID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Illustration ID")]
        public int IllustrationId { get; set; } // IllustrationID (Primary key)

        ///<summary>
        /// Illustrations used in manufacturing instructions. Stored as XML.
        ///</summary>
        [Column(@"Diagram", Order = 2, TypeName = "xml")]
        [Display(Name = "Diagram")]
        public string Diagram { get; set; } // Diagram

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 3, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Production_ProductModelIllustrations where [ProductModelIllustration].[IllustrationID] point to this entity (FK_ProductModelIllustration_Illustration_IllustrationID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductModelIllustrationEntity> Production_ProductModelIllustrations { get; set; } // ProductModelIllustration.FK_ProductModelIllustration_Illustration_IllustrationID

        public Production_IllustrationEntity()
        {
            ModifiedDate = System.DateTime.Now;
            Production_ProductModelIllustrations = new System.Collections.Generic.List<Production_ProductModelIllustrationEntity>();
        }
    }

    // Location
    ///<summary>
    /// Product inventory and manufacturing locations.
    ///</summary>
    [Table("Location", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_LocationEntity
    {

        ///<summary>
        /// Primary key for Location records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"LocationID", Order = 1, TypeName = "smallint")]
        [Index(@"PK_Location_LocationID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Location ID")]
        public short LocationId { get; set; } // LocationID (Primary key)

        ///<summary>
        /// Location description.
        ///</summary>
        [Column(@"Name", Order = 2, TypeName = "nvarchar")]
        [Index(@"AK_Location_Name", 1, IsUnique = true, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 50)

        ///<summary>
        /// Standard hourly cost of the manufacturing location.
        ///</summary>
        [Column(@"CostRate", Order = 3, TypeName = "smallmoney")]
        [Required]
        [DataType(DataType.Currency)]
        [Display(Name = "Cost rate")]
        public decimal CostRate { get; set; } // CostRate

        ///<summary>
        /// Work capacity (in hours) of the manufacturing location.
        ///</summary>
        [Column(@"Availability", Order = 4, TypeName = "decimal")]
        [Required]
        [Display(Name = "Availability")]
        public decimal Availability { get; set; } // Availability

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 5, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Production_ProductInventories where [ProductInventory].[LocationID] point to this entity (FK_ProductInventory_Location_LocationID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductInventoryEntity> Production_ProductInventories { get; set; } // ProductInventory.FK_ProductInventory_Location_LocationID
        /// <summary>
        /// Child Production_WorkOrderRoutings where [WorkOrderRouting].[LocationID] point to this entity (FK_WorkOrderRouting_Location_LocationID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_WorkOrderRoutingEntity> Production_WorkOrderRoutings { get; set; } // WorkOrderRouting.FK_WorkOrderRouting_Location_LocationID

        public Production_LocationEntity()
        {
            CostRate = 0.00m;
            Availability = 0.00m;
            ModifiedDate = System.DateTime.Now;
            Production_ProductInventories = new System.Collections.Generic.List<Production_ProductInventoryEntity>();
            Production_WorkOrderRoutings = new System.Collections.Generic.List<Production_WorkOrderRoutingEntity>();
        }
    }

    // Product
    ///<summary>
    /// Products sold or used in the manfacturing of sold products.
    ///</summary>
    [Table("Product", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductEntity
    {

        ///<summary>
        /// Primary key for Product records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ProductID", Order = 1, TypeName = "int")]
        [Index(@"PK_Product_ProductID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product ID")]
        public int ProductId { get; set; } // ProductID (Primary key)

        ///<summary>
        /// Name of the product.
        ///</summary>
        [Column(@"Name", Order = 2, TypeName = "nvarchar")]
        [Index(@"AK_Product_Name", 1, IsUnique = true, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 50)

        ///<summary>
        /// Unique product identification number.
        ///</summary>
        [Column(@"ProductNumber", Order = 3, TypeName = "nvarchar")]
        [Index(@"AK_Product_ProductNumber", 1, IsUnique = true, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Product number")]
        public string ProductNumber { get; set; } // ProductNumber (length: 25)

        ///<summary>
        /// 0 = Product is purchased, 1 = Product is manufactured in-house.
        ///</summary>
        [Column(@"MakeFlag", Order = 4, TypeName = "bit")]
        [Required]
        [Display(Name = "Make flag")]
        public bool MakeFlag { get; set; } // MakeFlag

        ///<summary>
        /// 0 = Product is not a salable item. 1 = Product is salable.
        ///</summary>
        [Column(@"FinishedGoodsFlag", Order = 5, TypeName = "bit")]
        [Required]
        [Display(Name = "Finished goods flag")]
        public bool FinishedGoodsFlag { get; set; } // FinishedGoodsFlag

        ///<summary>
        /// Product color.
        ///</summary>
        [Column(@"Color", Order = 6, TypeName = "nvarchar")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Color")]
        public string Color { get; set; } // Color (length: 15)

        ///<summary>
        /// Minimum inventory quantity.
        ///</summary>
        [Column(@"SafetyStockLevel", Order = 7, TypeName = "smallint")]
        [Required]
        [Display(Name = "Safety stock level")]
        public short SafetyStockLevel { get; set; } // SafetyStockLevel

        ///<summary>
        /// Inventory level that triggers a purchase order or work order.
        ///</summary>
        [Column(@"ReorderPoint", Order = 8, TypeName = "smallint")]
        [Required]
        [Display(Name = "Reorder point")]
        public short ReorderPoint { get; set; } // ReorderPoint

        ///<summary>
        /// Standard cost of the product.
        ///</summary>
        [Column(@"StandardCost", Order = 9, TypeName = "money")]
        [Required]
        [DataType(DataType.Currency)]
        [Display(Name = "Standard cost")]
        public decimal StandardCost { get; set; } // StandardCost

        ///<summary>
        /// Selling price.
        ///</summary>
        [Column(@"ListPrice", Order = 10, TypeName = "money")]
        [Required]
        [DataType(DataType.Currency)]
        [Display(Name = "List price")]
        public decimal ListPrice { get; set; } // ListPrice

        ///<summary>
        /// Product size.
        ///</summary>
        [Column(@"Size", Order = 11, TypeName = "nvarchar")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Size")]
        public string Size { get; set; } // Size (length: 5)

        ///<summary>
        /// Unit of measure for Size column.
        ///</summary>
        [Column(@"SizeUnitMeasureCode", Order = 12, TypeName = "nchar")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Size unit measure code")]
        public string SizeUnitMeasureCode { get; set; } // SizeUnitMeasureCode (length: 3)

        ///<summary>
        /// Unit of measure for Weight column.
        ///</summary>
        [Column(@"WeightUnitMeasureCode", Order = 13, TypeName = "nchar")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Weight unit measure code")]
        public string WeightUnitMeasureCode { get; set; } // WeightUnitMeasureCode (length: 3)

        ///<summary>
        /// Product weight.
        ///</summary>
        [Column(@"Weight", Order = 14, TypeName = "decimal")]
        [Display(Name = "Weight")]
        public decimal? Weight { get; set; } // Weight

        ///<summary>
        /// Number of days required to manufacture the product.
        ///</summary>
        [Column(@"DaysToManufacture", Order = 15, TypeName = "int")]
        [Required]
        [Display(Name = "Days to manufacture")]
        public int DaysToManufacture { get; set; } // DaysToManufacture

        ///<summary>
        /// R = Road, M = Mountain, T = Touring, S = Standard
        ///</summary>
        [Column(@"ProductLine", Order = 16, TypeName = "nchar")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Product line")]
        public string ProductLine { get; set; } // ProductLine (length: 2)

        ///<summary>
        /// H = High, M = Medium, L = Low
        ///</summary>
        [Column(@"Class", Order = 17, TypeName = "nchar")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Class")]
        public string Class { get; set; } // Class (length: 2)

        ///<summary>
        /// W = Womens, M = Mens, U = Universal
        ///</summary>
        [Column(@"Style", Order = 18, TypeName = "nchar")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Style")]
        public string Style { get; set; } // Style (length: 2)

        ///<summary>
        /// Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID.
        ///</summary>
        [Column(@"ProductSubcategoryID", Order = 19, TypeName = "int")]
        [Display(Name = "Product subcategory ID")]
        public int? ProductSubcategoryId { get; set; } // ProductSubcategoryID

        ///<summary>
        /// Product is a member of this product model. Foreign key to ProductModel.ProductModelID.
        ///</summary>
        [Column(@"ProductModelID", Order = 20, TypeName = "int")]
        [Display(Name = "Product model ID")]
        public int? ProductModelId { get; set; } // ProductModelID

        ///<summary>
        /// Date the product was available for sale.
        ///</summary>
        [Column(@"SellStartDate", Order = 21, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Sell start date")]
        public System.DateTime SellStartDate { get; set; } // SellStartDate

        ///<summary>
        /// Date the product was no longer available for sale.
        ///</summary>
        [Column(@"SellEndDate", Order = 22, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Sell end date")]
        public System.DateTime? SellEndDate { get; set; } // SellEndDate

        ///<summary>
        /// Date the product was discontinued.
        ///</summary>
        [Column(@"DiscontinuedDate", Order = 23, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Discontinued date")]
        public System.DateTime? DiscontinuedDate { get; set; } // DiscontinuedDate

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
        [Column(@"rowguid", Order = 24, TypeName = "uniqueidentifier")]
        [Index(@"AK_Product_rowguid", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid { get; set; } // rowguid

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 25, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Production_BillOfMaterials where [BillOfMaterials].[ComponentID] point to this entity (FK_BillOfMaterials_Product_ComponentID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_BillOfMaterialEntity> Production_BillOfMaterials_ComponentId { get; set; } // BillOfMaterials.FK_BillOfMaterials_Product_ComponentID
        /// <summary>
        /// Child Production_BillOfMaterials where [BillOfMaterials].[ProductAssemblyID] point to this entity (FK_BillOfMaterials_Product_ProductAssemblyID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_BillOfMaterialEntity> Production_BillOfMaterials_ProductAssemblyId { get; set; } // BillOfMaterials.FK_BillOfMaterials_Product_ProductAssemblyID
        /// <summary>
        /// Child Production_ProductCostHistories where [ProductCostHistory].[ProductID] point to this entity (FK_ProductCostHistory_Product_ProductID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductCostHistoryEntity> Production_ProductCostHistories { get; set; } // ProductCostHistory.FK_ProductCostHistory_Product_ProductID
        /// <summary>
        /// Child Production_ProductDocuments where [ProductDocument].[ProductID] point to this entity (FK_ProductDocument_Product_ProductID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductDocumentEntity> Production_ProductDocuments { get; set; } // ProductDocument.FK_ProductDocument_Product_ProductID
        /// <summary>
        /// Child Production_ProductInventories where [ProductInventory].[ProductID] point to this entity (FK_ProductInventory_Product_ProductID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductInventoryEntity> Production_ProductInventories { get; set; } // ProductInventory.FK_ProductInventory_Product_ProductID
        /// <summary>
        /// Child Production_ProductListPriceHistories where [ProductListPriceHistory].[ProductID] point to this entity (FK_ProductListPriceHistory_Product_ProductID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductListPriceHistoryEntity> Production_ProductListPriceHistories { get; set; } // ProductListPriceHistory.FK_ProductListPriceHistory_Product_ProductID
        /// <summary>
        /// Child Production_ProductProductPhotoes where [ProductProductPhoto].[ProductID] point to this entity (FK_ProductProductPhoto_Product_ProductID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductProductPhotoEntity> Production_ProductProductPhotoes { get; set; } // ProductProductPhoto.FK_ProductProductPhoto_Product_ProductID
        /// <summary>
        /// Child Production_ProductReviews where [ProductReview].[ProductID] point to this entity (FK_ProductReview_Product_ProductID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductReviewEntity> Production_ProductReviews { get; set; } // ProductReview.FK_ProductReview_Product_ProductID
        /// <summary>
        /// Child Production_TransactionHistories where [TransactionHistory].[ProductID] point to this entity (FK_TransactionHistory_Product_ProductID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_TransactionHistoryEntity> Production_TransactionHistories { get; set; } // TransactionHistory.FK_TransactionHistory_Product_ProductID
        /// <summary>
        /// Child Production_WorkOrders where [WorkOrder].[ProductID] point to this entity (FK_WorkOrder_Product_ProductID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_WorkOrderEntity> Production_WorkOrders { get; set; } // WorkOrder.FK_WorkOrder_Product_ProductID

        // Foreign keys

        /// <summary>
        /// Parent Production_ProductModel pointed by [Product].([ProductModelId]) (FK_Product_ProductModel_ProductModelID)
        /// </summary>
        [ForeignKey("ProductModelId")] public virtual Production_ProductModelEntity Production_ProductModel { get; set; } // FK_Product_ProductModel_ProductModelID

        /// <summary>
        /// Parent Production_ProductSubcategory pointed by [Product].([ProductSubcategoryId]) (FK_Product_ProductSubcategory_ProductSubcategoryID)
        /// </summary>
        [ForeignKey("ProductSubcategoryId")] public virtual Production_ProductSubcategoryEntity Production_ProductSubcategory { get; set; } // FK_Product_ProductSubcategory_ProductSubcategoryID

        /// <summary>
        /// Parent Production_UnitMeasure pointed by [Product].([SizeUnitMeasureCode]) (FK_Product_UnitMeasure_SizeUnitMeasureCode)
        /// </summary>
        [ForeignKey("SizeUnitMeasureCode")] public virtual Production_UnitMeasureEntity Production_UnitMeasure_SizeUnitMeasureCode { get; set; } // FK_Product_UnitMeasure_SizeUnitMeasureCode

        /// <summary>
        /// Parent Production_UnitMeasure pointed by [Product].([WeightUnitMeasureCode]) (FK_Product_UnitMeasure_WeightUnitMeasureCode)
        /// </summary>
        [ForeignKey("WeightUnitMeasureCode")] public virtual Production_UnitMeasureEntity Production_UnitMeasure_WeightUnitMeasureCode { get; set; } // FK_Product_UnitMeasure_WeightUnitMeasureCode

        public Production_ProductEntity()
        {
            MakeFlag = true;
            FinishedGoodsFlag = true;
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
            Production_BillOfMaterials_ComponentId = new System.Collections.Generic.List<Production_BillOfMaterialEntity>();
            Production_BillOfMaterials_ProductAssemblyId = new System.Collections.Generic.List<Production_BillOfMaterialEntity>();
            Production_ProductCostHistories = new System.Collections.Generic.List<Production_ProductCostHistoryEntity>();
            Production_ProductDocuments = new System.Collections.Generic.List<Production_ProductDocumentEntity>();
            Production_ProductInventories = new System.Collections.Generic.List<Production_ProductInventoryEntity>();
            Production_ProductListPriceHistories = new System.Collections.Generic.List<Production_ProductListPriceHistoryEntity>();
            Production_ProductProductPhotoes = new System.Collections.Generic.List<Production_ProductProductPhotoEntity>();
            Production_ProductReviews = new System.Collections.Generic.List<Production_ProductReviewEntity>();
            Production_TransactionHistories = new System.Collections.Generic.List<Production_TransactionHistoryEntity>();
            Production_WorkOrders = new System.Collections.Generic.List<Production_WorkOrderEntity>();
        }
    }

    // ProductCategory
    ///<summary>
    /// High-level product categorization.
    ///</summary>
    [Table("ProductCategory", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductCategoryEntity
    {

        ///<summary>
        /// Primary key for ProductCategory records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ProductCategoryID", Order = 1, TypeName = "int")]
        [Index(@"PK_ProductCategory_ProductCategoryID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product category ID")]
        public int ProductCategoryId { get; set; } // ProductCategoryID (Primary key)

        ///<summary>
        /// Category description.
        ///</summary>
        [Column(@"Name", Order = 2, TypeName = "nvarchar")]
        [Index(@"AK_ProductCategory_Name", 1, IsUnique = true, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 50)

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
        [Column(@"rowguid", Order = 3, TypeName = "uniqueidentifier")]
        [Index(@"AK_ProductCategory_rowguid", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid { get; set; } // rowguid

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 4, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Production_ProductSubcategories where [ProductSubcategory].[ProductCategoryID] point to this entity (FK_ProductSubcategory_ProductCategory_ProductCategoryID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductSubcategoryEntity> Production_ProductSubcategories { get; set; } // ProductSubcategory.FK_ProductSubcategory_ProductCategory_ProductCategoryID

        public Production_ProductCategoryEntity()
        {
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
            Production_ProductSubcategories = new System.Collections.Generic.List<Production_ProductSubcategoryEntity>();
        }
    }

    // ProductCostHistory
    ///<summary>
    /// Changes in the cost of a product over time.
    ///</summary>
    [Table("ProductCostHistory", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductCostHistoryEntity
    {

        ///<summary>
        /// Product identification number. Foreign key to Product.ProductID
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ProductID", Order = 1, TypeName = "int")]
        [Index(@"PK_ProductCostHistory_ProductID_StartDate", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product ID")]
        public int ProductId { get; set; } // ProductID (Primary key)

        ///<summary>
        /// Product cost start date.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"StartDate", Order = 2, TypeName = "datetime")]
        [Index(@"PK_ProductCostHistory_ProductID_StartDate", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [DataType(DataType.DateTime)]
        [Display(Name = "Start date")]
        public System.DateTime StartDate { get; set; } // StartDate (Primary key)

        ///<summary>
        /// Product cost end date.
        ///</summary>
        [Column(@"EndDate", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "End date")]
        public System.DateTime? EndDate { get; set; } // EndDate

        ///<summary>
        /// Standard cost of the product.
        ///</summary>
        [Column(@"StandardCost", Order = 4, TypeName = "money")]
        [Required]
        [DataType(DataType.Currency)]
        [Display(Name = "Standard cost")]
        public decimal StandardCost { get; set; } // StandardCost

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 5, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent Production_Product pointed by [ProductCostHistory].([ProductId]) (FK_ProductCostHistory_Product_ProductID)
        /// </summary>
        [ForeignKey("ProductId"), Required] public virtual Production_ProductEntity Production_Product { get; set; } // FK_ProductCostHistory_Product_ProductID

        public Production_ProductCostHistoryEntity()
        {
            ModifiedDate = System.DateTime.Now;
        }
    }

    // ProductDescription
    ///<summary>
    /// Product descriptions in several languages.
    ///</summary>
    [Table("ProductDescription", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductDescriptionEntity
    {

        ///<summary>
        /// Primary key for ProductDescription records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ProductDescriptionID", Order = 1, TypeName = "int")]
        [Index(@"PK_ProductDescription_ProductDescriptionID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product description ID")]
        public int ProductDescriptionId { get; set; } // ProductDescriptionID (Primary key)

        ///<summary>
        /// Description of the product.
        ///</summary>
        [Column(@"Description", Order = 2, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(400)]
        [StringLength(400)]
        [Display(Name = "Description")]
        public string Description { get; set; } // Description (length: 400)

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
        [Column(@"rowguid", Order = 3, TypeName = "uniqueidentifier")]
        [Index(@"AK_ProductDescription_rowguid", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid { get; set; } // rowguid

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 4, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Production_ProductModelProductDescriptionCultures where [ProductModelProductDescriptionCulture].[ProductDescriptionID] point to this entity (FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductModelProductDescriptionCultureEntity> Production_ProductModelProductDescriptionCultures { get; set; } // ProductModelProductDescriptionCulture.FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID

        public Production_ProductDescriptionEntity()
        {
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
            Production_ProductModelProductDescriptionCultures = new System.Collections.Generic.List<Production_ProductModelProductDescriptionCultureEntity>();
        }
    }

    // ProductDocument
    ///<summary>
    /// Cross-reference table mapping products to related product documents.
    ///</summary>
    [Table("ProductDocument", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductDocumentEntity
    {

        ///<summary>
        /// Product identification number. Foreign key to Product.ProductID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ProductID", Order = 1, TypeName = "int")]
        [Index(@"PK_ProductDocument_ProductID_DocumentNode", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product ID")]
        public int ProductId { get; set; } // ProductID (Primary key)

        ///<summary>
        /// Document identification number. Foreign key to Document.DocumentNode.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"DocumentNode", Order = 2, TypeName = "hierarchyid")]
        [Index(@"PK_ProductDocument_ProductID_DocumentNode", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Document node")]
        public System.Data.Entity.Hierarchy.HierarchyId DocumentNode { get; set; } // DocumentNode (Primary key)

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 3, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent Production_Document pointed by [ProductDocument].([DocumentNode]) (FK_ProductDocument_Document_DocumentNode)
        /// </summary>
        [ForeignKey("DocumentNode"), Required] public virtual Production_DocumentEntity Production_Document { get; set; } // FK_ProductDocument_Document_DocumentNode

        /// <summary>
        /// Parent Production_Product pointed by [ProductDocument].([ProductId]) (FK_ProductDocument_Product_ProductID)
        /// </summary>
        [ForeignKey("ProductId"), Required] public virtual Production_ProductEntity Production_Product { get; set; } // FK_ProductDocument_Product_ProductID

        public Production_ProductDocumentEntity()
        {
            ModifiedDate = System.DateTime.Now;
        }
    }

    // ProductInventory
    ///<summary>
    /// Product inventory information.
    ///</summary>
    [Table("ProductInventory", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductInventoryEntity
    {

        ///<summary>
        /// Product identification number. Foreign key to Product.ProductID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ProductID", Order = 1, TypeName = "int")]
        [Index(@"PK_ProductInventory_ProductID_LocationID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product ID")]
        public int ProductId { get; set; } // ProductID (Primary key)

        ///<summary>
        /// Inventory location identification number. Foreign key to Location.LocationID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"LocationID", Order = 2, TypeName = "smallint")]
        [Index(@"PK_ProductInventory_ProductID_LocationID", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Location ID")]
        public short LocationId { get; set; } // LocationID (Primary key)

        ///<summary>
        /// Storage compartment within an inventory location.
        ///</summary>
        [Column(@"Shelf", Order = 3, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Shelf")]
        public string Shelf { get; set; } // Shelf (length: 10)

        ///<summary>
        /// Storage container on a shelf in an inventory location.
        ///</summary>
        [Column(@"Bin", Order = 4, TypeName = "tinyint")]
        [Required]
        [Display(Name = "Bin")]
        public byte Bin { get; set; } // Bin

        ///<summary>
        /// Quantity of products in the inventory location.
        ///</summary>
        [Column(@"Quantity", Order = 5, TypeName = "smallint")]
        [Required]
        [Display(Name = "Quantity")]
        public short Quantity { get; set; } // Quantity

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
        [Column(@"rowguid", Order = 6, TypeName = "uniqueidentifier")]
        [Required]
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid { get; set; } // rowguid

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 7, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent Production_Location pointed by [ProductInventory].([LocationId]) (FK_ProductInventory_Location_LocationID)
        /// </summary>
        [ForeignKey("LocationId"), Required] public virtual Production_LocationEntity Production_Location { get; set; } // FK_ProductInventory_Location_LocationID

        /// <summary>
        /// Parent Production_Product pointed by [ProductInventory].([ProductId]) (FK_ProductInventory_Product_ProductID)
        /// </summary>
        [ForeignKey("ProductId"), Required] public virtual Production_ProductEntity Production_Product { get; set; } // FK_ProductInventory_Product_ProductID

        public Production_ProductInventoryEntity()
        {
            Quantity = 0;
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
        }
    }

    // ProductListPriceHistory
    ///<summary>
    /// Changes in the list price of a product over time.
    ///</summary>
    [Table("ProductListPriceHistory", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductListPriceHistoryEntity
    {

        ///<summary>
        /// Product identification number. Foreign key to Product.ProductID
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ProductID", Order = 1, TypeName = "int")]
        [Index(@"PK_ProductListPriceHistory_ProductID_StartDate", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product ID")]
        public int ProductId { get; set; } // ProductID (Primary key)

        ///<summary>
        /// List price start date.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"StartDate", Order = 2, TypeName = "datetime")]
        [Index(@"PK_ProductListPriceHistory_ProductID_StartDate", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [DataType(DataType.DateTime)]
        [Display(Name = "Start date")]
        public System.DateTime StartDate { get; set; } // StartDate (Primary key)

        ///<summary>
        /// List price end date
        ///</summary>
        [Column(@"EndDate", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "End date")]
        public System.DateTime? EndDate { get; set; } // EndDate

        ///<summary>
        /// Product list price.
        ///</summary>
        [Column(@"ListPrice", Order = 4, TypeName = "money")]
        [Required]
        [DataType(DataType.Currency)]
        [Display(Name = "List price")]
        public decimal ListPrice { get; set; } // ListPrice

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 5, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent Production_Product pointed by [ProductListPriceHistory].([ProductId]) (FK_ProductListPriceHistory_Product_ProductID)
        /// </summary>
        [ForeignKey("ProductId"), Required] public virtual Production_ProductEntity Production_Product { get; set; } // FK_ProductListPriceHistory_Product_ProductID

        public Production_ProductListPriceHistoryEntity()
        {
            ModifiedDate = System.DateTime.Now;
        }
    }

    // ProductModel
    ///<summary>
    /// Product model classification.
    ///</summary>
    [Table("ProductModel", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductModelEntity
    {

        ///<summary>
        /// Primary key for ProductModel records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ProductModelID", Order = 1, TypeName = "int")]
        [Index(@"PK_ProductModel_ProductModelID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product model ID")]
        public int ProductModelId { get; set; } // ProductModelID (Primary key)

        ///<summary>
        /// Product model description.
        ///</summary>
        [Column(@"Name", Order = 2, TypeName = "nvarchar")]
        [Index(@"AK_ProductModel_Name", 1, IsUnique = true, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 50)

        ///<summary>
        /// Detailed product catalog information in xml format.
        ///</summary>
        [Column(@"CatalogDescription", Order = 3, TypeName = "xml")]
        [Display(Name = "Catalog description")]
        public string CatalogDescription { get; set; } // CatalogDescription

        ///<summary>
        /// Manufacturing instructions in xml format.
        ///</summary>
        [Column(@"Instructions", Order = 4, TypeName = "xml")]
        [Display(Name = "Instructions")]
        public string Instructions { get; set; } // Instructions

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
        [Column(@"rowguid", Order = 5, TypeName = "uniqueidentifier")]
        [Index(@"AK_ProductModel_rowguid", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid { get; set; } // rowguid

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 6, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Production_Products where [Product].[ProductModelID] point to this entity (FK_Product_ProductModel_ProductModelID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductEntity> Production_Products { get; set; } // Product.FK_Product_ProductModel_ProductModelID
        /// <summary>
        /// Child Production_ProductModelIllustrations where [ProductModelIllustration].[ProductModelID] point to this entity (FK_ProductModelIllustration_ProductModel_ProductModelID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductModelIllustrationEntity> Production_ProductModelIllustrations { get; set; } // ProductModelIllustration.FK_ProductModelIllustration_ProductModel_ProductModelID
        /// <summary>
        /// Child Production_ProductModelProductDescriptionCultures where [ProductModelProductDescriptionCulture].[ProductModelID] point to this entity (FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductModelProductDescriptionCultureEntity> Production_ProductModelProductDescriptionCultures { get; set; } // ProductModelProductDescriptionCulture.FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID

        public Production_ProductModelEntity()
        {
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
            Production_Products = new System.Collections.Generic.List<Production_ProductEntity>();
            Production_ProductModelIllustrations = new System.Collections.Generic.List<Production_ProductModelIllustrationEntity>();
            Production_ProductModelProductDescriptionCultures = new System.Collections.Generic.List<Production_ProductModelProductDescriptionCultureEntity>();
        }
    }

    // ProductModelIllustration
    ///<summary>
    /// Cross-reference table mapping product models and illustrations.
    ///</summary>
    [Table("ProductModelIllustration", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductModelIllustrationEntity
    {

        ///<summary>
        /// Primary key. Foreign key to ProductModel.ProductModelID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ProductModelID", Order = 1, TypeName = "int")]
        [Index(@"PK_ProductModelIllustration_ProductModelID_IllustrationID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product model ID")]
        public int ProductModelId { get; set; } // ProductModelID (Primary key)

        ///<summary>
        /// Primary key. Foreign key to Illustration.IllustrationID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"IllustrationID", Order = 2, TypeName = "int")]
        [Index(@"PK_ProductModelIllustration_ProductModelID_IllustrationID", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Illustration ID")]
        public int IllustrationId { get; set; } // IllustrationID (Primary key)

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 3, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent Production_Illustration pointed by [ProductModelIllustration].([IllustrationId]) (FK_ProductModelIllustration_Illustration_IllustrationID)
        /// </summary>
        [ForeignKey("IllustrationId"), Required] public virtual Production_IllustrationEntity Production_Illustration { get; set; } // FK_ProductModelIllustration_Illustration_IllustrationID

        /// <summary>
        /// Parent Production_ProductModel pointed by [ProductModelIllustration].([ProductModelId]) (FK_ProductModelIllustration_ProductModel_ProductModelID)
        /// </summary>
        [ForeignKey("ProductModelId"), Required] public virtual Production_ProductModelEntity Production_ProductModel { get; set; } // FK_ProductModelIllustration_ProductModel_ProductModelID

        public Production_ProductModelIllustrationEntity()
        {
            ModifiedDate = System.DateTime.Now;
        }
    }

    // ProductModelProductDescriptionCulture
    ///<summary>
    /// Cross-reference table mapping product descriptions and the language the description is written in.
    ///</summary>
    [Table("ProductModelProductDescriptionCulture", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductModelProductDescriptionCultureEntity
    {

        ///<summary>
        /// Primary key. Foreign key to ProductModel.ProductModelID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ProductModelID", Order = 1, TypeName = "int")]
        [Index(@"PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product model ID")]
        public int ProductModelId { get; set; } // ProductModelID (Primary key)

        ///<summary>
        /// Primary key. Foreign key to ProductDescription.ProductDescriptionID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ProductDescriptionID", Order = 2, TypeName = "int")]
        [Index(@"PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product description ID")]
        public int ProductDescriptionId { get; set; } // ProductDescriptionID (Primary key)

        ///<summary>
        /// Culture identification number. Foreign key to Culture.CultureID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"CultureID", Order = 3, TypeName = "nchar")]
        [Index(@"PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID", 3, IsUnique = true, IsClustered = true)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(6)]
        [StringLength(6)]
        [Key]
        [Display(Name = "Culture ID")]
        public string CultureId { get; set; } // CultureID (Primary key) (length: 6)

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 4, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent Production_Culture pointed by [ProductModelProductDescriptionCulture].([CultureId]) (FK_ProductModelProductDescriptionCulture_Culture_CultureID)
        /// </summary>
        [ForeignKey("CultureId"), Required] public virtual Production_CultureEntity Production_Culture { get; set; } // FK_ProductModelProductDescriptionCulture_Culture_CultureID

        /// <summary>
        /// Parent Production_ProductDescription pointed by [ProductModelProductDescriptionCulture].([ProductDescriptionId]) (FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID)
        /// </summary>
        [ForeignKey("ProductDescriptionId"), Required] public virtual Production_ProductDescriptionEntity Production_ProductDescription { get; set; } // FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID

        /// <summary>
        /// Parent Production_ProductModel pointed by [ProductModelProductDescriptionCulture].([ProductModelId]) (FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID)
        /// </summary>
        [ForeignKey("ProductModelId"), Required] public virtual Production_ProductModelEntity Production_ProductModel { get; set; } // FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID

        public Production_ProductModelProductDescriptionCultureEntity()
        {
            ModifiedDate = System.DateTime.Now;
        }
    }

    // ProductPhoto
    ///<summary>
    /// Product images.
    ///</summary>
    [Table("ProductPhoto", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductPhotoEntity
    {

        ///<summary>
        /// Primary key for ProductPhoto records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ProductPhotoID", Order = 1, TypeName = "int")]
        [Index(@"PK_ProductPhoto_ProductPhotoID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product photo ID")]
        public int ProductPhotoId { get; set; } // ProductPhotoID (Primary key)

        ///<summary>
        /// Small image of the product.
        ///</summary>
        [Column(@"ThumbNailPhoto", Order = 2, TypeName = "varbinary(max)")]
        [Display(Name = "Thumb nail photo")]
        public byte[] ThumbNailPhoto { get; set; } // ThumbNailPhoto

        ///<summary>
        /// Small image file name.
        ///</summary>
        [Column(@"ThumbnailPhotoFileName", Order = 3, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Thumbnail photo file name")]
        public string ThumbnailPhotoFileName { get; set; } // ThumbnailPhotoFileName (length: 50)

        ///<summary>
        /// Large image of the product.
        ///</summary>
        [Column(@"LargePhoto", Order = 4, TypeName = "varbinary(max)")]
        [Display(Name = "Large photo")]
        public byte[] LargePhoto { get; set; } // LargePhoto

        ///<summary>
        /// Large image file name.
        ///</summary>
        [Column(@"LargePhotoFileName", Order = 5, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Large photo file name")]
        public string LargePhotoFileName { get; set; } // LargePhotoFileName (length: 50)

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 6, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Production_ProductProductPhotoes where [ProductProductPhoto].[ProductPhotoID] point to this entity (FK_ProductProductPhoto_ProductPhoto_ProductPhotoID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductProductPhotoEntity> Production_ProductProductPhotoes { get; set; } // ProductProductPhoto.FK_ProductProductPhoto_ProductPhoto_ProductPhotoID

        public Production_ProductPhotoEntity()
        {
            ModifiedDate = System.DateTime.Now;
            Production_ProductProductPhotoes = new System.Collections.Generic.List<Production_ProductProductPhotoEntity>();
        }
    }

    // ProductProductPhoto
    ///<summary>
    /// Cross-reference table mapping products and product photos.
    ///</summary>
    [Table("ProductProductPhoto", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductProductPhotoEntity
    {

        ///<summary>
        /// Product identification number. Foreign key to Product.ProductID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ProductID", Order = 1, TypeName = "int")]
        [Index(@"PK_ProductProductPhoto_ProductID_ProductPhotoID", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Product ID")]
        public int ProductId { get; set; } // ProductID (Primary key)

        ///<summary>
        /// Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ProductPhotoID", Order = 2, TypeName = "int")]
        [Index(@"PK_ProductProductPhoto_ProductID_ProductPhotoID", 2, IsUnique = true, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Product photo ID")]
        public int ProductPhotoId { get; set; } // ProductPhotoID (Primary key)

        ///<summary>
        /// 0 = Photo is not the principal image. 1 = Photo is the principal image.
        ///</summary>
        [Column(@"Primary", Order = 3, TypeName = "bit")]
        [Required]
        [Display(Name = "Primary")]
        public bool Primary { get; set; } // Primary

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 4, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent Production_Product pointed by [ProductProductPhoto].([ProductId]) (FK_ProductProductPhoto_Product_ProductID)
        /// </summary>
        [ForeignKey("ProductId"), Required] public virtual Production_ProductEntity Production_Product { get; set; } // FK_ProductProductPhoto_Product_ProductID

        /// <summary>
        /// Parent Production_ProductPhoto pointed by [ProductProductPhoto].([ProductPhotoId]) (FK_ProductProductPhoto_ProductPhoto_ProductPhotoID)
        /// </summary>
        [ForeignKey("ProductPhotoId"), Required] public virtual Production_ProductPhotoEntity Production_ProductPhoto { get; set; } // FK_ProductProductPhoto_ProductPhoto_ProductPhotoID

        public Production_ProductProductPhotoEntity()
        {
            Primary = false;
            ModifiedDate = System.DateTime.Now;
        }
    }

    // ProductReview
    ///<summary>
    /// Customer reviews of products they have purchased.
    ///</summary>
    [Table("ProductReview", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductReviewEntity
    {

        ///<summary>
        /// Primary key for ProductReview records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ProductReviewID", Order = 1, TypeName = "int")]
        [Index(@"PK_ProductReview_ProductReviewID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product review ID")]
        public int ProductReviewId { get; set; } // ProductReviewID (Primary key)

        ///<summary>
        /// Product identification number. Foreign key to Product.ProductID.
        ///</summary>
        [Column(@"ProductID", Order = 2, TypeName = "int")]
        [Index(@"IX_ProductReview_ProductID_Name", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Product ID")]
        public int ProductId { get; set; } // ProductID

        ///<summary>
        /// Name of the reviewer.
        ///</summary>
        [Column(@"ReviewerName", Order = 3, TypeName = "nvarchar")]
        [Index(@"IX_ProductReview_ProductID_Name", 2, IsUnique = false, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Reviewer name")]
        public string ReviewerName { get; set; } // ReviewerName (length: 50)

        ///<summary>
        /// Date review was submitted.
        ///</summary>
        [Column(@"ReviewDate", Order = 4, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Review date")]
        public System.DateTime ReviewDate { get; set; } // ReviewDate

        ///<summary>
        /// Reviewer&apos;s e-mail address.
        ///</summary>
        [Column(@"EmailAddress", Order = 5, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [EmailAddress]
        [Display(Name = "Email address")]
        public string EmailAddress { get; set; } // EmailAddress (length: 50)

        ///<summary>
        /// Product rating given by the reviewer. Scale is 1 to 5 with 5 as the highest rating.
        ///</summary>
        [Column(@"Rating", Order = 6, TypeName = "int")]
        [Required]
        [Display(Name = "Rating")]
        public int Rating { get; set; } // Rating

        ///<summary>
        /// Reviewer&apos;s comments
        ///</summary>
        [Column(@"Comments", Order = 7, TypeName = "nvarchar")]
        [MaxLength(3850)]
        [StringLength(3850)]
        [Display(Name = "Comments")]
        public string Comments { get; set; } // Comments (length: 3850)

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 8, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent Production_Product pointed by [ProductReview].([ProductId]) (FK_ProductReview_Product_ProductID)
        /// </summary>
        [ForeignKey("ProductId"), Required] public virtual Production_ProductEntity Production_Product { get; set; } // FK_ProductReview_Product_ProductID

        public Production_ProductReviewEntity()
        {
            ReviewDate = System.DateTime.Now;
            ModifiedDate = System.DateTime.Now;
        }
    }

    // ProductSubcategory
    ///<summary>
    /// Product subcategories. See ProductCategory table.
    ///</summary>
    [Table("ProductSubcategory", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductSubcategoryEntity
    {

        ///<summary>
        /// Primary key for ProductSubcategory records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ProductSubcategoryID", Order = 1, TypeName = "int")]
        [Index(@"PK_ProductSubcategory_ProductSubcategoryID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product subcategory ID")]
        public int ProductSubcategoryId { get; set; } // ProductSubcategoryID (Primary key)

        ///<summary>
        /// Product category identification number. Foreign key to ProductCategory.ProductCategoryID.
        ///</summary>
        [Column(@"ProductCategoryID", Order = 2, TypeName = "int")]
        [Required]
        [Display(Name = "Product category ID")]
        public int ProductCategoryId { get; set; } // ProductCategoryID

        ///<summary>
        /// Subcategory description.
        ///</summary>
        [Column(@"Name", Order = 3, TypeName = "nvarchar")]
        [Index(@"AK_ProductSubcategory_Name", 1, IsUnique = true, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 50)

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
        [Column(@"rowguid", Order = 4, TypeName = "uniqueidentifier")]
        [Index(@"AK_ProductSubcategory_rowguid", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid { get; set; } // rowguid

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 5, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Production_Products where [Product].[ProductSubcategoryID] point to this entity (FK_Product_ProductSubcategory_ProductSubcategoryID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductEntity> Production_Products { get; set; } // Product.FK_Product_ProductSubcategory_ProductSubcategoryID

        // Foreign keys

        /// <summary>
        /// Parent Production_ProductCategory pointed by [ProductSubcategory].([ProductCategoryId]) (FK_ProductSubcategory_ProductCategory_ProductCategoryID)
        /// </summary>
        [ForeignKey("ProductCategoryId"), Required] public virtual Production_ProductCategoryEntity Production_ProductCategory { get; set; } // FK_ProductSubcategory_ProductCategory_ProductCategoryID

        public Production_ProductSubcategoryEntity()
        {
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
            Production_Products = new System.Collections.Generic.List<Production_ProductEntity>();
        }
    }

    // ScrapReason
    ///<summary>
    /// Manufacturing failure reasons lookup table.
    ///</summary>
    [Table("ScrapReason", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ScrapReasonEntity
    {

        ///<summary>
        /// Primary key for ScrapReason records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ScrapReasonID", Order = 1, TypeName = "smallint")]
        [Index(@"PK_ScrapReason_ScrapReasonID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Scrap reason ID")]
        public short ScrapReasonId { get; set; } // ScrapReasonID (Primary key)

        ///<summary>
        /// Failure description.
        ///</summary>
        [Column(@"Name", Order = 2, TypeName = "nvarchar")]
        [Index(@"AK_ScrapReason_Name", 1, IsUnique = true, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 50)

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 3, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Production_WorkOrders where [WorkOrder].[ScrapReasonID] point to this entity (FK_WorkOrder_ScrapReason_ScrapReasonID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_WorkOrderEntity> Production_WorkOrders { get; set; } // WorkOrder.FK_WorkOrder_ScrapReason_ScrapReasonID

        public Production_ScrapReasonEntity()
        {
            ModifiedDate = System.DateTime.Now;
            Production_WorkOrders = new System.Collections.Generic.List<Production_WorkOrderEntity>();
        }
    }

    // TransactionHistory
    ///<summary>
    /// Record of each purchase order, sales order, or work order transaction year to date.
    ///</summary>
    [Table("TransactionHistory", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_TransactionHistoryEntity
    {

        ///<summary>
        /// Primary key for TransactionHistory records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"TransactionID", Order = 1, TypeName = "int")]
        [Index(@"PK_TransactionHistory_TransactionID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Transaction ID")]
        public int TransactionId { get; set; } // TransactionID (Primary key)

        ///<summary>
        /// Product identification number. Foreign key to Product.ProductID.
        ///</summary>
        [Column(@"ProductID", Order = 2, TypeName = "int")]
        [Index(@"IX_TransactionHistory_ProductID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Product ID")]
        public int ProductId { get; set; } // ProductID

        ///<summary>
        /// Purchase order, sales order, or work order identification number.
        ///</summary>
        [Column(@"ReferenceOrderID", Order = 3, TypeName = "int")]
        [Index(@"IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Reference order ID")]
        public int ReferenceOrderId { get; set; } // ReferenceOrderID

        ///<summary>
        /// Line number associated with the purchase order, sales order, or work order.
        ///</summary>
        [Column(@"ReferenceOrderLineID", Order = 4, TypeName = "int")]
        [Index(@"IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID", 2, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Reference order line ID")]
        public int ReferenceOrderLineId { get; set; } // ReferenceOrderLineID

        ///<summary>
        /// Date and time of the transaction.
        ///</summary>
        [Column(@"TransactionDate", Order = 5, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Transaction date")]
        public System.DateTime TransactionDate { get; set; } // TransactionDate

        ///<summary>
        /// W = WorkOrder, S = SalesOrder, P = PurchaseOrder
        ///</summary>
        [Column(@"TransactionType", Order = 6, TypeName = "nchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Transaction type")]
        public string TransactionType { get; set; } // TransactionType (length: 1)

        ///<summary>
        /// Product quantity.
        ///</summary>
        [Column(@"Quantity", Order = 7, TypeName = "int")]
        [Required]
        [Display(Name = "Quantity")]
        public int Quantity { get; set; } // Quantity

        ///<summary>
        /// Product cost.
        ///</summary>
        [Column(@"ActualCost", Order = 8, TypeName = "money")]
        [Required]
        [DataType(DataType.Currency)]
        [Display(Name = "Actual cost")]
        public decimal ActualCost { get; set; } // ActualCost

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 9, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent Production_Product pointed by [TransactionHistory].([ProductId]) (FK_TransactionHistory_Product_ProductID)
        /// </summary>
        [ForeignKey("ProductId"), Required] public virtual Production_ProductEntity Production_Product { get; set; } // FK_TransactionHistory_Product_ProductID

        public Production_TransactionHistoryEntity()
        {
            ReferenceOrderLineId = 0;
            TransactionDate = System.DateTime.Now;
            ModifiedDate = System.DateTime.Now;
        }
    }

    // TransactionHistoryArchive
    ///<summary>
    /// Transactions for previous years.
    ///</summary>
    [Table("TransactionHistoryArchive", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_TransactionHistoryArchiveEntity
    {

        ///<summary>
        /// Primary key for TransactionHistoryArchive records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TransactionID", Order = 1, TypeName = "int")]
        [Index(@"PK_TransactionHistoryArchive_TransactionID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Transaction ID")]
        public int TransactionId { get; set; } // TransactionID (Primary key)

        ///<summary>
        /// Product identification number. Foreign key to Product.ProductID.
        ///</summary>
        [Column(@"ProductID", Order = 2, TypeName = "int")]
        [Index(@"IX_TransactionHistoryArchive_ProductID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Product ID")]
        public int ProductId { get; set; } // ProductID

        ///<summary>
        /// Purchase order, sales order, or work order identification number.
        ///</summary>
        [Column(@"ReferenceOrderID", Order = 3, TypeName = "int")]
        [Index(@"IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLineID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Reference order ID")]
        public int ReferenceOrderId { get; set; } // ReferenceOrderID

        ///<summary>
        /// Line number associated with the purchase order, sales order, or work order.
        ///</summary>
        [Column(@"ReferenceOrderLineID", Order = 4, TypeName = "int")]
        [Index(@"IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLineID", 2, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Reference order line ID")]
        public int ReferenceOrderLineId { get; set; } // ReferenceOrderLineID

        ///<summary>
        /// Date and time of the transaction.
        ///</summary>
        [Column(@"TransactionDate", Order = 5, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Transaction date")]
        public System.DateTime TransactionDate { get; set; } // TransactionDate

        ///<summary>
        /// W = Work Order, S = Sales Order, P = Purchase Order
        ///</summary>
        [Column(@"TransactionType", Order = 6, TypeName = "nchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Transaction type")]
        public string TransactionType { get; set; } // TransactionType (length: 1)

        ///<summary>
        /// Product quantity.
        ///</summary>
        [Column(@"Quantity", Order = 7, TypeName = "int")]
        [Required]
        [Display(Name = "Quantity")]
        public int Quantity { get; set; } // Quantity

        ///<summary>
        /// Product cost.
        ///</summary>
        [Column(@"ActualCost", Order = 8, TypeName = "money")]
        [Required]
        [DataType(DataType.Currency)]
        [Display(Name = "Actual cost")]
        public decimal ActualCost { get; set; } // ActualCost

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 9, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        public Production_TransactionHistoryArchiveEntity()
        {
            ReferenceOrderLineId = 0;
            TransactionDate = System.DateTime.Now;
            ModifiedDate = System.DateTime.Now;
        }
    }

    // UnitMeasure
    ///<summary>
    /// Unit of measure lookup table.
    ///</summary>
    [Table("UnitMeasure", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_UnitMeasureEntity
    {

        ///<summary>
        /// Primary key.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"UnitMeasureCode", Order = 1, TypeName = "nchar")]
        [Index(@"PK_UnitMeasure_UnitMeasureCode", 1, IsUnique = true, IsClustered = true)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(3)]
        [StringLength(3)]
        [Key]
        [Display(Name = "Unit measure code")]
        public string UnitMeasureCode { get; set; } // UnitMeasureCode (Primary key) (length: 3)

        ///<summary>
        /// Unit of measure description.
        ///</summary>
        [Column(@"Name", Order = 2, TypeName = "nvarchar")]
        [Index(@"AK_UnitMeasure_Name", 1, IsUnique = true, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 50)

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 3, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Production_BillOfMaterials where [BillOfMaterials].[UnitMeasureCode] point to this entity (FK_BillOfMaterials_UnitMeasure_UnitMeasureCode)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_BillOfMaterialEntity> Production_BillOfMaterials { get; set; } // BillOfMaterials.FK_BillOfMaterials_UnitMeasure_UnitMeasureCode
        /// <summary>
        /// Child Production_Products where [Product].[SizeUnitMeasureCode] point to this entity (FK_Product_UnitMeasure_SizeUnitMeasureCode)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductEntity> Production_Products_SizeUnitMeasureCode { get; set; } // Product.FK_Product_UnitMeasure_SizeUnitMeasureCode
        /// <summary>
        /// Child Production_Products where [Product].[WeightUnitMeasureCode] point to this entity (FK_Product_UnitMeasure_WeightUnitMeasureCode)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductEntity> Production_Products_WeightUnitMeasureCode { get; set; } // Product.FK_Product_UnitMeasure_WeightUnitMeasureCode

        public Production_UnitMeasureEntity()
        {
            ModifiedDate = System.DateTime.Now;
            Production_BillOfMaterials = new System.Collections.Generic.List<Production_BillOfMaterialEntity>();
            Production_Products_SizeUnitMeasureCode = new System.Collections.Generic.List<Production_ProductEntity>();
            Production_Products_WeightUnitMeasureCode = new System.Collections.Generic.List<Production_ProductEntity>();
        }
    }

    // vProductAndDescription
    [Table("vProductAndDescription", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_VProductAndDescriptionEntity
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ProductID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Product ID")]
        public int ProductId { get; set; } // ProductID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Name", Order = 2, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Key]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (Primary key) (length: 50)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ProductModel", Order = 3, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Key]
        [Display(Name = "Product model")]
        public string ProductModel { get; set; } // ProductModel (Primary key) (length: 50)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"CultureID", Order = 4, TypeName = "nchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(6)]
        [StringLength(6)]
        [Key]
        [Display(Name = "Culture ID")]
        public string CultureId { get; set; } // CultureID (Primary key) (length: 6)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Description", Order = 5, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(400)]
        [StringLength(400)]
        [Key]
        [Display(Name = "Description")]
        public string Description { get; set; } // Description (Primary key) (length: 400)
    }

    // vProductModelCatalogDescription
    [Table("vProductModelCatalogDescription", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_VProductModelCatalogDescriptionEntity
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ProductModelID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Product model ID")]
        public int ProductModelId { get; set; } // ProductModelID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Name", Order = 2, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Key]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (Primary key) (length: 50)

        [Column(@"Summary", Order = 3, TypeName = "nvarchar(max)")]
        [Display(Name = "Summary")]
        public string Summary { get; set; } // Summary

        [Column(@"Manufacturer", Order = 4, TypeName = "nvarchar(max)")]
        [Display(Name = "Manufacturer")]
        public string Manufacturer { get; set; } // Manufacturer

        [Column(@"Copyright", Order = 5, TypeName = "nvarchar")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Copyright")]
        public string Copyright { get; set; } // Copyright (length: 30)

        [Column(@"ProductURL", Order = 6, TypeName = "nvarchar")]
        [MaxLength(256)]
        [StringLength(256)]
        [Display(Name = "Product url")]
        public string ProductUrl { get; set; } // ProductURL (length: 256)

        [Column(@"WarrantyPeriod", Order = 7, TypeName = "nvarchar")]
        [MaxLength(256)]
        [StringLength(256)]
        [Display(Name = "Warranty period")]
        public string WarrantyPeriod { get; set; } // WarrantyPeriod (length: 256)

        [Column(@"WarrantyDescription", Order = 8, TypeName = "nvarchar")]
        [MaxLength(256)]
        [StringLength(256)]
        [Display(Name = "Warranty description")]
        public string WarrantyDescription { get; set; } // WarrantyDescription (length: 256)

        [Column(@"NoOfYears", Order = 9, TypeName = "nvarchar")]
        [MaxLength(256)]
        [StringLength(256)]
        [Display(Name = "No of years")]
        public string NoOfYears { get; set; } // NoOfYears (length: 256)

        [Column(@"MaintenanceDescription", Order = 10, TypeName = "nvarchar")]
        [MaxLength(256)]
        [StringLength(256)]
        [Display(Name = "Maintenance description")]
        public string MaintenanceDescription { get; set; } // MaintenanceDescription (length: 256)

        [Column(@"Wheel", Order = 11, TypeName = "nvarchar")]
        [MaxLength(256)]
        [StringLength(256)]
        [Display(Name = "Wheel")]
        public string Wheel { get; set; } // Wheel (length: 256)

        [Column(@"Saddle", Order = 12, TypeName = "nvarchar")]
        [MaxLength(256)]
        [StringLength(256)]
        [Display(Name = "Saddle")]
        public string Saddle { get; set; } // Saddle (length: 256)

        [Column(@"Pedal", Order = 13, TypeName = "nvarchar")]
        [MaxLength(256)]
        [StringLength(256)]
        [Display(Name = "Pedal")]
        public string Pedal { get; set; } // Pedal (length: 256)

        [Column(@"BikeFrame", Order = 14, TypeName = "nvarchar(max)")]
        [Display(Name = "Bike frame")]
        public string BikeFrame { get; set; } // BikeFrame

        [Column(@"Crankset", Order = 15, TypeName = "nvarchar")]
        [MaxLength(256)]
        [StringLength(256)]
        [Display(Name = "Crankset")]
        public string Crankset { get; set; } // Crankset (length: 256)

        [Column(@"PictureAngle", Order = 16, TypeName = "nvarchar")]
        [MaxLength(256)]
        [StringLength(256)]
        [Display(Name = "Picture angle")]
        public string PictureAngle { get; set; } // PictureAngle (length: 256)

        [Column(@"PictureSize", Order = 17, TypeName = "nvarchar")]
        [MaxLength(256)]
        [StringLength(256)]
        [Display(Name = "Picture size")]
        public string PictureSize { get; set; } // PictureSize (length: 256)

        [Column(@"ProductPhotoID", Order = 18, TypeName = "nvarchar")]
        [MaxLength(256)]
        [StringLength(256)]
        [Display(Name = "Product photo ID")]
        public string ProductPhotoId { get; set; } // ProductPhotoID (length: 256)

        [Column(@"Material", Order = 19, TypeName = "nvarchar")]
        [MaxLength(256)]
        [StringLength(256)]
        [Display(Name = "Material")]
        public string Material { get; set; } // Material (length: 256)

        [Column(@"Color", Order = 20, TypeName = "nvarchar")]
        [MaxLength(256)]
        [StringLength(256)]
        [Display(Name = "Color")]
        public string Color { get; set; } // Color (length: 256)

        [Column(@"ProductLine", Order = 21, TypeName = "nvarchar")]
        [MaxLength(256)]
        [StringLength(256)]
        [Display(Name = "Product line")]
        public string ProductLine { get; set; } // ProductLine (length: 256)

        [Column(@"Style", Order = 22, TypeName = "nvarchar")]
        [MaxLength(256)]
        [StringLength(256)]
        [Display(Name = "Style")]
        public string Style { get; set; } // Style (length: 256)

        [Column(@"RiderExperience", Order = 23, TypeName = "nvarchar")]
        [MaxLength(1024)]
        [StringLength(1024)]
        [Display(Name = "Rider experience")]
        public string RiderExperience { get; set; } // RiderExperience (length: 1024)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"rowguid", Order = 24, TypeName = "uniqueidentifier")]
        [Required]
        [Key]
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid { get; set; } // rowguid (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ModifiedDate", Order = 25, TypeName = "datetime")]
        [Required]
        [Key]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate (Primary key)
    }

    // vProductModelInstructions
    [Table("vProductModelInstructions", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_VProductModelInstructionEntity
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ProductModelID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Product model ID")]
        public int ProductModelId { get; set; } // ProductModelID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Name", Order = 2, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Key]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (Primary key) (length: 50)

        [Column(@"Instructions", Order = 3, TypeName = "nvarchar(max)")]
        [Display(Name = "Instructions")]
        public string Instructions { get; set; } // Instructions

        [Column(@"LocationID", Order = 4, TypeName = "int")]
        [Display(Name = "Location ID")]
        public int? LocationId { get; set; } // LocationID

        [Column(@"SetupHours", Order = 5, TypeName = "decimal")]
        [Display(Name = "Setup hours")]
        public decimal? SetupHours { get; set; } // SetupHours

        [Column(@"MachineHours", Order = 6, TypeName = "decimal")]
        [Display(Name = "Machine hours")]
        public decimal? MachineHours { get; set; } // MachineHours

        [Column(@"LaborHours", Order = 7, TypeName = "decimal")]
        [Display(Name = "Labor hours")]
        public decimal? LaborHours { get; set; } // LaborHours

        [Column(@"LotSize", Order = 8, TypeName = "int")]
        [Display(Name = "Lot size")]
        public int? LotSize { get; set; } // LotSize

        [Column(@"Step", Order = 9, TypeName = "nvarchar")]
        [MaxLength(1024)]
        [StringLength(1024)]
        [Display(Name = "Step")]
        public string Step { get; set; } // Step (length: 1024)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"rowguid", Order = 10, TypeName = "uniqueidentifier")]
        [Required]
        [Key]
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid { get; set; } // rowguid (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ModifiedDate", Order = 11, TypeName = "datetime")]
        [Required]
        [Key]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate (Primary key)
    }

    // WorkOrder
    ///<summary>
    /// Manufacturing work orders.
    ///</summary>
    [Table("WorkOrder", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_WorkOrderEntity
    {

        ///<summary>
        /// Primary key for WorkOrder records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"WorkOrderID", Order = 1, TypeName = "int")]
        [Index(@"PK_WorkOrder_WorkOrderID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Work order ID")]
        public int WorkOrderId { get; set; } // WorkOrderID (Primary key)

        ///<summary>
        /// Product identification number. Foreign key to Product.ProductID.
        ///</summary>
        [Column(@"ProductID", Order = 2, TypeName = "int")]
        [Index(@"IX_WorkOrder_ProductID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Product ID")]
        public int ProductId { get; set; } // ProductID

        ///<summary>
        /// Product quantity to build.
        ///</summary>
        [Column(@"OrderQty", Order = 3, TypeName = "int")]
        [Required]
        [Display(Name = "Order qty")]
        public int OrderQty { get; set; } // OrderQty

        ///<summary>
        /// Quantity built and put in inventory.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
        [Column(@"StockedQty", Order = 4, TypeName = "int")]
        [Display(Name = "Stocked qty")]
        public int StockedQty { get; private set; } // StockedQty

        ///<summary>
        /// Quantity that failed inspection.
        ///</summary>
        [Column(@"ScrappedQty", Order = 5, TypeName = "smallint")]
        [Required]
        [Display(Name = "Scrapped qty")]
        public short ScrappedQty { get; set; } // ScrappedQty

        ///<summary>
        /// Work order start date.
        ///</summary>
        [Column(@"StartDate", Order = 6, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Start date")]
        public System.DateTime StartDate { get; set; } // StartDate

        ///<summary>
        /// Work order end date.
        ///</summary>
        [Column(@"EndDate", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "End date")]
        public System.DateTime? EndDate { get; set; } // EndDate

        ///<summary>
        /// Work order due date.
        ///</summary>
        [Column(@"DueDate", Order = 8, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Due date")]
        public System.DateTime DueDate { get; set; } // DueDate

        ///<summary>
        /// Reason for inspection failure.
        ///</summary>
        [Column(@"ScrapReasonID", Order = 9, TypeName = "smallint")]
        [Index(@"IX_WorkOrder_ScrapReasonID", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Scrap reason ID")]
        public short? ScrapReasonId { get; set; } // ScrapReasonID

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 10, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Production_WorkOrderRoutings where [WorkOrderRouting].[WorkOrderID] point to this entity (FK_WorkOrderRouting_WorkOrder_WorkOrderID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_WorkOrderRoutingEntity> Production_WorkOrderRoutings { get; set; } // WorkOrderRouting.FK_WorkOrderRouting_WorkOrder_WorkOrderID

        // Foreign keys

        /// <summary>
        /// Parent Production_Product pointed by [WorkOrder].([ProductId]) (FK_WorkOrder_Product_ProductID)
        /// </summary>
        [ForeignKey("ProductId"), Required] public virtual Production_ProductEntity Production_Product { get; set; } // FK_WorkOrder_Product_ProductID

        /// <summary>
        /// Parent Production_ScrapReason pointed by [WorkOrder].([ScrapReasonId]) (FK_WorkOrder_ScrapReason_ScrapReasonID)
        /// </summary>
        [ForeignKey("ScrapReasonId")] public virtual Production_ScrapReasonEntity Production_ScrapReason { get; set; } // FK_WorkOrder_ScrapReason_ScrapReasonID

        public Production_WorkOrderEntity()
        {
            ModifiedDate = System.DateTime.Now;
            Production_WorkOrderRoutings = new System.Collections.Generic.List<Production_WorkOrderRoutingEntity>();
        }
    }

    // WorkOrderRouting
    ///<summary>
    /// Work order details.
    ///</summary>
    [Table("WorkOrderRouting", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_WorkOrderRoutingEntity
    {

        ///<summary>
        /// Primary key. Foreign key to WorkOrder.WorkOrderID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"WorkOrderID", Order = 1, TypeName = "int")]
        [Index(@"PK_WorkOrderRouting_WorkOrderID_ProductID_OperationSequence", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Work order ID")]
        public int WorkOrderId { get; set; } // WorkOrderID (Primary key)

        ///<summary>
        /// Primary key. Foreign key to Product.ProductID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ProductID", Order = 2, TypeName = "int")]
        [Index(@"IX_WorkOrderRouting_ProductID", 1, IsUnique = false, IsClustered = false)]
        [Index(@"PK_WorkOrderRouting_WorkOrderID_ProductID_OperationSequence", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product ID")]
        public int ProductId { get; set; } // ProductID (Primary key)

        ///<summary>
        /// Primary key. Indicates the manufacturing process sequence.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"OperationSequence", Order = 3, TypeName = "smallint")]
        [Index(@"PK_WorkOrderRouting_WorkOrderID_ProductID_OperationSequence", 3, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Operation sequence")]
        public short OperationSequence { get; set; } // OperationSequence (Primary key)

        ///<summary>
        /// Manufacturing location where the part is processed. Foreign key to Location.LocationID.
        ///</summary>
        [Column(@"LocationID", Order = 4, TypeName = "smallint")]
        [Required]
        [Display(Name = "Location ID")]
        public short LocationId { get; set; } // LocationID

        ///<summary>
        /// Planned manufacturing start date.
        ///</summary>
        [Column(@"ScheduledStartDate", Order = 5, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Scheduled start date")]
        public System.DateTime ScheduledStartDate { get; set; } // ScheduledStartDate

        ///<summary>
        /// Planned manufacturing end date.
        ///</summary>
        [Column(@"ScheduledEndDate", Order = 6, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Scheduled end date")]
        public System.DateTime ScheduledEndDate { get; set; } // ScheduledEndDate

        ///<summary>
        /// Actual start date.
        ///</summary>
        [Column(@"ActualStartDate", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual start date")]
        public System.DateTime? ActualStartDate { get; set; } // ActualStartDate

        ///<summary>
        /// Actual end date.
        ///</summary>
        [Column(@"ActualEndDate", Order = 8, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual end date")]
        public System.DateTime? ActualEndDate { get; set; } // ActualEndDate

        ///<summary>
        /// Number of manufacturing hours used.
        ///</summary>
        [Column(@"ActualResourceHrs", Order = 9, TypeName = "decimal")]
        [Display(Name = "Actual resource hrs")]
        public decimal? ActualResourceHrs { get; set; } // ActualResourceHrs

        ///<summary>
        /// Estimated manufacturing cost.
        ///</summary>
        [Column(@"PlannedCost", Order = 10, TypeName = "money")]
        [Required]
        [DataType(DataType.Currency)]
        [Display(Name = "Planned cost")]
        public decimal PlannedCost { get; set; } // PlannedCost

        ///<summary>
        /// Actual manufacturing cost.
        ///</summary>
        [Column(@"ActualCost", Order = 11, TypeName = "money")]
        [DataType(DataType.Currency)]
        [Display(Name = "Actual cost")]
        public decimal? ActualCost { get; set; } // ActualCost

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 12, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent Production_Location pointed by [WorkOrderRouting].([LocationId]) (FK_WorkOrderRouting_Location_LocationID)
        /// </summary>
        [ForeignKey("LocationId"), Required] public virtual Production_LocationEntity Production_Location { get; set; } // FK_WorkOrderRouting_Location_LocationID

        /// <summary>
        /// Parent Production_WorkOrder pointed by [WorkOrderRouting].([WorkOrderId]) (FK_WorkOrderRouting_WorkOrder_WorkOrderID)
        /// </summary>
        [ForeignKey("WorkOrderId"), Required] public virtual Production_WorkOrderEntity Production_WorkOrder { get; set; } // FK_WorkOrderRouting_WorkOrder_WorkOrderID

        public Production_WorkOrderRoutingEntity()
        {
            ModifiedDate = System.DateTime.Now;
        }
    }

    #endregion

    #region POCO Configuration

    // BillOfMaterials
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_BillOfMaterialEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_BillOfMaterialEntity>
    {
        public Production_BillOfMaterialEntityMapping()
            : this("Production")
        {
        }

        public Production_BillOfMaterialEntityMapping(string schema)
        {
            Property(x => x.ProductAssemblyId).IsOptional();
            Property(x => x.EndDate).IsOptional();
            Property(x => x.UnitMeasureCode).IsFixedLength();
            Property(x => x.PerAssemblyQty).HasPrecision(8,2);

        }
    }

    // Culture
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_CultureEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_CultureEntity>
    {
        public Production_CultureEntityMapping()
            : this("Production")
        {
        }

        public Production_CultureEntityMapping(string schema)
        {
            Property(x => x.CultureId).IsFixedLength();
        }
    }

    // Document
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_DocumentEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_DocumentEntity>
    {
        public Production_DocumentEntityMapping()
            : this("Production")
        {
        }

        public Production_DocumentEntityMapping(string schema)
        {
            Property(x => x.DocumentLevel).IsOptional();
            Property(x => x.Revision).IsFixedLength();
            Property(x => x.DocumentSummary).IsOptional();
            Property(x => x.Document).IsOptional();
        }
    }

    // Illustration
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_IllustrationEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_IllustrationEntity>
    {
        public Production_IllustrationEntityMapping()
            : this("Production")
        {
        }

        public Production_IllustrationEntityMapping(string schema)
        {
            Property(x => x.Diagram).IsOptional();
        }
    }

    // Location
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_LocationEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_LocationEntity>
    {
        public Production_LocationEntityMapping()
            : this("Production")
        {
        }

        public Production_LocationEntityMapping(string schema)
        {
            Property(x => x.CostRate).HasPrecision(10,4);
            Property(x => x.Availability).HasPrecision(8,2);
        }
    }

    // Product
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_ProductEntity>
    {
        public Production_ProductEntityMapping()
            : this("Production")
        {
        }

        public Production_ProductEntityMapping(string schema)
        {
            Property(x => x.Color).IsOptional();
            Property(x => x.StandardCost).HasPrecision(19,4);
            Property(x => x.ListPrice).HasPrecision(19,4);
            Property(x => x.Size).IsOptional();
            Property(x => x.SizeUnitMeasureCode).IsOptional().IsFixedLength();
            Property(x => x.WeightUnitMeasureCode).IsOptional().IsFixedLength();
            Property(x => x.Weight).IsOptional().HasPrecision(8,2);
            Property(x => x.ProductLine).IsOptional().IsFixedLength();
            Property(x => x.Class).IsOptional().IsFixedLength();
            Property(x => x.Style).IsOptional().IsFixedLength();
            Property(x => x.ProductSubcategoryId).IsOptional();
            Property(x => x.ProductModelId).IsOptional();
            Property(x => x.SellEndDate).IsOptional();
            Property(x => x.DiscontinuedDate).IsOptional();

        }
    }

    // ProductCategory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductCategoryEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_ProductCategoryEntity>
    {
        public Production_ProductCategoryEntityMapping()
            : this("Production")
        {
        }

        public Production_ProductCategoryEntityMapping(string schema)
        {
        }
    }

    // ProductCostHistory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductCostHistoryEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_ProductCostHistoryEntity>
    {
        public Production_ProductCostHistoryEntityMapping()
            : this("Production")
        {
        }

        public Production_ProductCostHistoryEntityMapping(string schema)
        {
            Property(x => x.EndDate).IsOptional();
            Property(x => x.StandardCost).HasPrecision(19,4);

        }
    }

    // ProductDescription
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductDescriptionEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_ProductDescriptionEntity>
    {
        public Production_ProductDescriptionEntityMapping()
            : this("Production")
        {
        }

        public Production_ProductDescriptionEntityMapping(string schema)
        {
        }
    }

    // ProductDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductDocumentEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_ProductDocumentEntity>
    {
        public Production_ProductDocumentEntityMapping()
            : this("Production")
        {
        }

        public Production_ProductDocumentEntityMapping(string schema)
        {

        }
    }

    // ProductInventory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductInventoryEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_ProductInventoryEntity>
    {
        public Production_ProductInventoryEntityMapping()
            : this("Production")
        {
        }

        public Production_ProductInventoryEntityMapping(string schema)
        {

        }
    }

    // ProductListPriceHistory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductListPriceHistoryEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_ProductListPriceHistoryEntity>
    {
        public Production_ProductListPriceHistoryEntityMapping()
            : this("Production")
        {
        }

        public Production_ProductListPriceHistoryEntityMapping(string schema)
        {
            Property(x => x.EndDate).IsOptional();
            Property(x => x.ListPrice).HasPrecision(19,4);

        }
    }

    // ProductModel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductModelEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_ProductModelEntity>
    {
        public Production_ProductModelEntityMapping()
            : this("Production")
        {
        }

        public Production_ProductModelEntityMapping(string schema)
        {
            Property(x => x.CatalogDescription).IsOptional();
            Property(x => x.Instructions).IsOptional();
        }
    }

    // ProductModelIllustration
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductModelIllustrationEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_ProductModelIllustrationEntity>
    {
        public Production_ProductModelIllustrationEntityMapping()
            : this("Production")
        {
        }

        public Production_ProductModelIllustrationEntityMapping(string schema)
        {

        }
    }

    // ProductModelProductDescriptionCulture
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductModelProductDescriptionCultureEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_ProductModelProductDescriptionCultureEntity>
    {
        public Production_ProductModelProductDescriptionCultureEntityMapping()
            : this("Production")
        {
        }

        public Production_ProductModelProductDescriptionCultureEntityMapping(string schema)
        {
            Property(x => x.CultureId).IsFixedLength();

        }
    }

    // ProductPhoto
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductPhotoEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_ProductPhotoEntity>
    {
        public Production_ProductPhotoEntityMapping()
            : this("Production")
        {
        }

        public Production_ProductPhotoEntityMapping(string schema)
        {
            Property(x => x.ThumbNailPhoto).IsOptional();
            Property(x => x.ThumbnailPhotoFileName).IsOptional();
            Property(x => x.LargePhoto).IsOptional();
            Property(x => x.LargePhotoFileName).IsOptional();
        }
    }

    // ProductProductPhoto
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductProductPhotoEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_ProductProductPhotoEntity>
    {
        public Production_ProductProductPhotoEntityMapping()
            : this("Production")
        {
        }

        public Production_ProductProductPhotoEntityMapping(string schema)
        {

        }
    }

    // ProductReview
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductReviewEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_ProductReviewEntity>
    {
        public Production_ProductReviewEntityMapping()
            : this("Production")
        {
        }

        public Production_ProductReviewEntityMapping(string schema)
        {
            Property(x => x.Comments).IsOptional();

        }
    }

    // ProductSubcategory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ProductSubcategoryEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_ProductSubcategoryEntity>
    {
        public Production_ProductSubcategoryEntityMapping()
            : this("Production")
        {
        }

        public Production_ProductSubcategoryEntityMapping(string schema)
        {

        }
    }

    // ScrapReason
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_ScrapReasonEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_ScrapReasonEntity>
    {
        public Production_ScrapReasonEntityMapping()
            : this("Production")
        {
        }

        public Production_ScrapReasonEntityMapping(string schema)
        {
        }
    }

    // TransactionHistory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_TransactionHistoryEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_TransactionHistoryEntity>
    {
        public Production_TransactionHistoryEntityMapping()
            : this("Production")
        {
        }

        public Production_TransactionHistoryEntityMapping(string schema)
        {
            Property(x => x.TransactionType).IsFixedLength();
            Property(x => x.ActualCost).HasPrecision(19,4);

        }
    }

    // TransactionHistoryArchive
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_TransactionHistoryArchiveEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_TransactionHistoryArchiveEntity>
    {
        public Production_TransactionHistoryArchiveEntityMapping()
            : this("Production")
        {
        }

        public Production_TransactionHistoryArchiveEntityMapping(string schema)
        {
            Property(x => x.TransactionType).IsFixedLength();
            Property(x => x.ActualCost).HasPrecision(19,4);
        }
    }

    // UnitMeasure
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_UnitMeasureEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_UnitMeasureEntity>
    {
        public Production_UnitMeasureEntityMapping()
            : this("Production")
        {
        }

        public Production_UnitMeasureEntityMapping(string schema)
        {
            Property(x => x.UnitMeasureCode).IsFixedLength();
        }
    }

    // vProductAndDescription
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_VProductAndDescriptionEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_VProductAndDescriptionEntity>
    {
        public Production_VProductAndDescriptionEntityMapping()
            : this("Production")
        {
        }

        public Production_VProductAndDescriptionEntityMapping(string schema)
        {
            Property(x => x.CultureId).IsFixedLength();
        }
    }

    // vProductModelCatalogDescription
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_VProductModelCatalogDescriptionEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_VProductModelCatalogDescriptionEntity>
    {
        public Production_VProductModelCatalogDescriptionEntityMapping()
            : this("Production")
        {
        }

        public Production_VProductModelCatalogDescriptionEntityMapping(string schema)
        {
            Property(x => x.Summary).IsOptional();
            Property(x => x.Manufacturer).IsOptional();
            Property(x => x.Copyright).IsOptional();
            Property(x => x.ProductUrl).IsOptional();
            Property(x => x.WarrantyPeriod).IsOptional();
            Property(x => x.WarrantyDescription).IsOptional();
            Property(x => x.NoOfYears).IsOptional();
            Property(x => x.MaintenanceDescription).IsOptional();
            Property(x => x.Wheel).IsOptional();
            Property(x => x.Saddle).IsOptional();
            Property(x => x.Pedal).IsOptional();
            Property(x => x.BikeFrame).IsOptional();
            Property(x => x.Crankset).IsOptional();
            Property(x => x.PictureAngle).IsOptional();
            Property(x => x.PictureSize).IsOptional();
            Property(x => x.ProductPhotoId).IsOptional();
            Property(x => x.Material).IsOptional();
            Property(x => x.Color).IsOptional();
            Property(x => x.ProductLine).IsOptional();
            Property(x => x.Style).IsOptional();
            Property(x => x.RiderExperience).IsOptional();
        }
    }

    // vProductModelInstructions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_VProductModelInstructionEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_VProductModelInstructionEntity>
    {
        public Production_VProductModelInstructionEntityMapping()
            : this("Production")
        {
        }

        public Production_VProductModelInstructionEntityMapping(string schema)
        {
            Property(x => x.Instructions).IsOptional();
            Property(x => x.LocationId).IsOptional();
            Property(x => x.SetupHours).IsOptional().HasPrecision(9,4);
            Property(x => x.MachineHours).IsOptional().HasPrecision(9,4);
            Property(x => x.LaborHours).IsOptional().HasPrecision(9,4);
            Property(x => x.LotSize).IsOptional();
            Property(x => x.Step).IsOptional();
        }
    }

    // WorkOrder
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_WorkOrderEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_WorkOrderEntity>
    {
        public Production_WorkOrderEntityMapping()
            : this("Production")
        {
        }

        public Production_WorkOrderEntityMapping(string schema)
        {
            Property(x => x.EndDate).IsOptional();
            Property(x => x.ScrapReasonId).IsOptional();

        }
    }

    // WorkOrderRouting
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class Production_WorkOrderRoutingEntityMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Production_WorkOrderRoutingEntity>
    {
        public Production_WorkOrderRoutingEntityMapping()
            : this("Production")
        {
        }

        public Production_WorkOrderRoutingEntityMapping(string schema)
        {
            Property(x => x.ActualStartDate).IsOptional();
            Property(x => x.ActualEndDate).IsOptional();
            Property(x => x.ActualResourceHrs).IsOptional().HasPrecision(9,4);
            Property(x => x.PlannedCost).HasPrecision(19,4);
            Property(x => x.ActualCost).IsOptional().HasPrecision(19,4);

        }
    }

    #endregion

}
// </auto-generated>

